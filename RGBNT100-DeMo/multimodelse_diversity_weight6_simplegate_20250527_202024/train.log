2025-05-27 20:20:28,741 DeMo INFO: Saving model in the path :./RGBNT100-DeMo/multimodelse_diversity_weight6_simplegate_20250527_202024
2025-05-27 20:20:28,741 DeMo INFO: Namespace(config_file='configs/RGBNT100/DeMo.yml', fea_cft=0, local_rank=0, opts=['OUTPUT_DIR', './RGBNT100-DeMo/multimodelse_diversity_weight6_simplegate_20250527_202024'])
2025-05-27 20:20:28,741 DeMo INFO: Loaded configuration file configs/RGBNT100/DeMo.yml
2025-05-27 20:20:28,742 DeMo INFO: 
MODEL:
  TRANSFORMER_TYPE: 'ViT-B-16'
  STRIDE_SIZE: [ 16, 16 ]
  SIE_CAMERA: True
  DIRECT: 0
  SIE_COE: 1.0
  ID_LOSS_WEIGHT: 0.25
  TRIPLET_LOSS_WEIGHT: 1.0
  GLOBAL_LOCAL: True
  HDM: True
  ATM: True
  HEAD: 8
  CENGJIFUSION: True

INPUT:
  SIZE_TRAIN: [ 128, 256 ]
  SIZE_TEST: [ 128, 256 ]
  PROB: 0.5 # random horizontal flip
  RE_PROB: 0.5 # random erasing
  PADDING: 10

DATALOADER:
  SAMPLER: 'softmax_triplet'
  NUM_INSTANCE: 16
  NUM_WORKERS: 14

DATASETS:
  NAMES: ('RGBNT100')
  ROOT_DIR: '..'

SOLVER:
  BASE_LR: 0.00035
  WARMUP_ITERS: 5
  MAX_EPOCHS: 30
  OPTIMIZER_NAME: 'Adam'
  GAMMA: 0.1
  IMS_PER_BATCH: 64
  EVAL_PERIOD: 1
  SEED: 1111

TEST:
  IMS_PER_BATCH: 128
  RE_RANKING: 'no'
  WEIGHT: ''
  NECK_FEAT: 'before'
  FEAT_NORM: 'yes'
  MISS: "nothing"

OUTPUT_DIR: '..'




2025-05-27 20:20:28,742 DeMo INFO: Running with config:
DATALOADER:
  NUM_INSTANCE: 16
  NUM_WORKERS: 14
  SAMPLER: softmax_triplet
DATASETS:
  NAMES: RGBNT100
  ROOT_DIR: ..
INPUT:
  PADDING: 10
  PIXEL_MEAN: [0.5, 0.5, 0.5]
  PIXEL_STD: [0.5, 0.5, 0.5]
  PROB: 0.5
  RE_PROB: 0.5
  SIZE_TEST: [128, 256]
  SIZE_TRAIN: [128, 256]
MODEL:
  ADAPTER: False
  ATM: True
  ATT_DROP_RATE: 0.0
  CENGJIFUSION: True
  DEVICE: cuda
  DEVICE_ID: 0
  DIRECT: 0
  DIST_TRAIN: False
  DROP_OUT: 0.0
  DROP_PATH: 0.1
  FROZEN: False
  GLOBAL_LOCAL: True
  HDM: True
  HEAD: 8
  ID_LOSS_TYPE: softmax
  ID_LOSS_WEIGHT: 0.25
  IF_LABELSMOOTH: on
  IF_WITH_CENTER: no
  METRIC_LOSS_TYPE: triplet
  NAME: DeMo
  NECK: bnneck
  NO_MARGIN: True
  PRETRAIN_PATH_T: /path/to/your/vitb_16_224_21k.pth
  PROMPT: False
  SIE_CAMERA: True
  SIE_COE: 1.0
  SIE_VIEW: False
  STRIDE_SIZE: [16, 16]
  TRANSFORMER_TYPE: ViT-B-16
  TRIPLET_LOSS_WEIGHT: 1.0
OUTPUT_DIR: ./RGBNT100-DeMo/multimodelse_diversity_weight6_simplegate_20250527_202024
SOLVER:
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 2
  CENTER_LOSS_WEIGHT: 0.0005
  CENTER_LR: 0.5
  CHECKPOINT_PERIOD: 60
  CLUSTER_MARGIN: 0.3
  COSINE_MARGIN: 0.5
  COSINE_SCALE: 30
  EVAL_PERIOD: 1
  GAMMA: 0.1
  IMS_PER_BATCH: 64
  LARGE_FC_LR: False
  LOG_PERIOD: 10
  MARGIN: 0.3
  MAX_EPOCHS: 30
  MOMENTUM: 0.9
  OPTIMIZER_NAME: Adam
  RANGE_ALPHA: 0
  RANGE_BETA: 1
  RANGE_K: 2
  RANGE_LOSS_WEIGHT: 1
  RANGE_MARGIN: 0.3
  SEED: 1111
  STEPS: (40, 70)
  WARMUP_FACTOR: 0.01
  WARMUP_ITERS: 5
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
TEST:
  FEAT: 0
  FEAT_NORM: yes
  IMS_PER_BATCH: 128
  MISS: nothing
  NECK_FEAT: before
  RE_RANKING: no
  WEIGHT: 
=> RGB_IR loaded
Dataset statistics:
  ----------------------------------------
  subset   | # ids | # images | # cameras
  ----------------------------------------
  train    |    50 |     8675 |         8
  query    |    50 |     1715 |         8
  gallery  |    50 |     8575 |         8
  ----------------------------------------
data is ready
cengjifusion: True
rwkvbackbone: False
using Transformer_type: ViT-B-16 as a backbone
simplegate: True
Resized position embedding: %s to %s torch.Size([197, 768]) torch.Size([129, 768])
Position embedding resize to height:8 width: 16
Successfully load ckpt!
_IncompatibleKeys(missing_keys=['visual.triple_dff.fc_atten1.0.weight', 'visual.triple_dff.fc_atten1.1.weight', 'visual.triple_dff.fc_atten1.1.bias', 'visual.triple_dff.fc_atten2.0.weight', 'visual.triple_dff.fc_atten2.1.weight', 'visual.triple_dff.fc_atten2.1.bias', 'visual.triple_dff.fc_atten4.0.weight', 'visual.triple_dff.fc_atten4.1.weight', 'visual.triple_dff.fc_atten4.1.bias', 'visual.triple_dff.input_weight_net.0.weight', 'visual.triple_dff.input_weight_net.0.bias', 'visual.triple_dff.input_weight_net.2.weight', 'visual.triple_dff.input_weight_net.2.bias', 'visual.triple_dff.gate_fc.0.weight', 'visual.triple_dff.gate_enhancement.0.weight', 'visual.triple_dff.gate_enhancement.0.bias', 'visual.triple_dff.fc_redu.0.weight', 'visual.triple_dff.fc_redu.1.weight', 'visual.triple_dff.fc_redu.1.bias', 'visual.triple_dff.residual_fc1.0.weight', 'visual.triple_dff.residual_fc1.1.weight', 'visual.triple_dff.residual_fc1.1.bias', 'visual.triple_dff.residual_fc2.0.weight', 'visual.triple_dff.residual_fc2.1.weight', 'visual.triple_dff.residual_fc2.1.bias', 'visual.triple_dff.residual_fc3.0.weight', 'visual.triple_dff.residual_fc3.1.weight', 'visual.triple_dff.residual_fc3.1.bias', 'visual.triple_dff.residual_fusion.0.weight', 'visual.triple_dff.residual_fusion.1.weight', 'visual.triple_dff.residual_fusion.1.bias', 'visual.triple_dff.fc1.weight', 'visual.triple_dff.fc1.bias', 'visual.triple_dff.fc2.weight', 'visual.triple_dff.fc2.bias', 'visual.triple_dff.fc3.weight', 'visual.triple_dff.fc3.bias', 'visual.triple_dff.attention_fusion.0.weight', 'visual.triple_dff.attention_fusion.0.bias', 'visual.quad_dffs.stage1_triple_dff.fc_atten1.0.weight', 'visual.quad_dffs.stage1_triple_dff.fc_atten1.1.weight', 'visual.quad_dffs.stage1_triple_dff.fc_atten1.1.bias', 'visual.quad_dffs.stage1_triple_dff.fc_atten2.0.weight', 'visual.quad_dffs.stage1_triple_dff.fc_atten2.1.weight', 'visual.quad_dffs.stage1_triple_dff.fc_atten2.1.bias', 'visual.quad_dffs.stage1_triple_dff.fc_atten4.0.weight', 'visual.quad_dffs.stage1_triple_dff.fc_atten4.1.weight', 'visual.quad_dffs.stage1_triple_dff.fc_atten4.1.bias', 'visual.quad_dffs.stage1_triple_dff.input_weight_net.0.weight', 'visual.quad_dffs.stage1_triple_dff.input_weight_net.0.bias', 'visual.quad_dffs.stage1_triple_dff.input_weight_net.2.weight', 'visual.quad_dffs.stage1_triple_dff.input_weight_net.2.bias', 'visual.quad_dffs.stage1_triple_dff.gate_fc.0.weight', 'visual.quad_dffs.stage1_triple_dff.gate_enhancement.0.weight', 'visual.quad_dffs.stage1_triple_dff.gate_enhancement.0.bias', 'visual.quad_dffs.stage1_triple_dff.fc_redu.0.weight', 'visual.quad_dffs.stage1_triple_dff.fc_redu.1.weight', 'visual.quad_dffs.stage1_triple_dff.fc_redu.1.bias', 'visual.quad_dffs.stage1_triple_dff.residual_fc1.0.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fc1.1.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fc1.1.bias', 'visual.quad_dffs.stage1_triple_dff.residual_fc2.0.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fc2.1.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fc2.1.bias', 'visual.quad_dffs.stage1_triple_dff.residual_fc3.0.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fc3.1.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fc3.1.bias', 'visual.quad_dffs.stage1_triple_dff.residual_fusion.0.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fusion.1.weight', 'visual.quad_dffs.stage1_triple_dff.residual_fusion.1.bias', 'visual.quad_dffs.stage1_triple_dff.fc1.weight', 'visual.quad_dffs.stage1_triple_dff.fc1.bias', 'visual.quad_dffs.stage1_triple_dff.fc2.weight', 'visual.quad_dffs.stage1_triple_dff.fc2.bias', 'visual.quad_dffs.stage1_triple_dff.fc3.weight', 'visual.quad_dffs.stage1_triple_dff.fc3.bias', 'visual.quad_dffs.stage1_triple_dff.attention_fusion.0.weight', 'visual.quad_dffs.stage1_triple_dff.attention_fusion.0.bias', 'visual.quad_dffs.stage1_enhancement.0.weight', 'visual.quad_dffs.stage1_enhancement.0.bias', 'visual.quad_dffs.stage1_enhancement.1.weight', 'visual.quad_dffs.stage1_enhancement.1.bias', 'visual.quad_dffs.stage1_enhancement.3.weight', 'visual.quad_dffs.stage1_enhancement.3.bias', 'visual.quad_dffs.stage1_enhancement.5.weight', 'visual.quad_dffs.stage1_enhancement.5.bias', 'visual.quad_dffs.input4_preprocessing.0.weight', 'visual.quad_dffs.input4_preprocessing.0.bias', 'visual.quad_dffs.input4_preprocessing.1.weight', 'visual.quad_dffs.input4_preprocessing.1.bias', 'visual.quad_dffs.input4_preprocessing.3.weight', 'visual.quad_dffs.input4_preprocessing.3.bias', 'visual.quad_dffs.input4_preprocessing.4.weight', 'visual.quad_dffs.input4_preprocessing.4.bias', 'visual.quad_dffs.cross_stage_attention.0.weight', 'visual.quad_dffs.cross_stage_attention.0.bias', 'visual.quad_dffs.cross_stage_attention.2.weight', 'visual.quad_dffs.cross_stage_attention.2.bias', 'visual.quad_dffs.adaptive_fusion_weight.0.weight', 'visual.quad_dffs.adaptive_fusion_weight.0.bias', 'visual.quad_dffs.adaptive_fusion_weight.2.weight', 'visual.quad_dffs.adaptive_fusion_weight.2.bias', 'visual.quad_dffs.stage2_dff.fc_atten1.0.weight', 'visual.quad_dffs.stage2_dff.fc_atten2.0.weight', 'visual.quad_dffs.stage2_dff.fc_atten3.0.weight', 'visual.quad_dffs.stage2_dff.gate_fc.0.weight', 'visual.quad_dffs.stage2_dff.fc_redu.weight', 'visual.quad_dffs.stage2_dff.residual_fc.weight', 'visual.quad_dffs.stage2_dff.fc1.weight', 'visual.quad_dffs.stage2_dff.fc1.bias', 'visual.quad_dffs.stage2_dff.fc2.weight', 'visual.quad_dffs.stage2_dff.fc2.bias', 'visual.quad_dffs.memory_input1.weight', 'visual.quad_dffs.memory_input4.weight', 'visual.quad_dffs.memory_fusion.0.weight', 'visual.quad_dffs.memory_fusion.1.weight', 'visual.quad_dffs.memory_fusion.1.bias', 'visual.quad_dffs.global_context.0.weight', 'visual.quad_dffs.global_context.0.bias', 'visual.quad_dffs.global_context.2.weight', 'visual.quad_dffs.global_context.2.bias', 'visual.quad_dffs.final_refinement.0.weight', 'visual.quad_dffs.final_refinement.0.bias', 'visual.quad_dffs.final_refinement.1.weight', 'visual.quad_dffs.final_refinement.1.bias', 'visual.quad_dffs.final_refinement.3.weight', 'visual.quad_dffs.final_refinement.3.bias', 'visual.quad_dffs.final_refinement.4.weight', 'visual.quad_dffs.final_refinement.4.bias', 'visual.gated_enhancement.fusion_net.0.weight', 'visual.gated_enhancement.fusion_net.0.bias', 'visual.gated_enhancement.fusion_net.1.weight', 'visual.gated_enhancement.fusion_net.1.bias', 'visual.gated_enhancement.gate_net.0.weight', 'visual.gated_enhancement.gate_net.0.bias', 'visual.gated_enhancement.weight_net.0.weight', 'visual.gated_enhancement.weight_net.0.bias'], unexpected_keys=[])
Loading pretrained model from CLIP
camera number is : 8
combineway: multimodelse
2025-05-27 20:20:35,191 DeMo INFO: combineway: multimodelse
UsingDiversity: True
===========Building DeMo===========
2025-05-27 20:20:35,219 DeMo INFO: DeMo(
  (BACKBONE): build_transformer_new(
    (base): VisionTransformer(
      (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
      (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (transformer): Transformer(
        (resblocks): Sequential(
          (0): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (triple_dff): TripleInputDirectDFF(
        (avg_pool1): AdaptiveAvgPool1d(output_size=1)
        (avg_pool2): AdaptiveAvgPool1d(output_size=2)
        (avg_pool4): AdaptiveAvgPool1d(output_size=4)
        (fc_atten1): Sequential(
          (0): Linear(in_features=2304, out_features=2304, bias=False)
          (1): LayerNorm((2304,), eps=1e-05, elementwise_affine=True)
          (2): Sigmoid()
        )
        (fc_atten2): Sequential(
          (0): Linear(in_features=2304, out_features=2304, bias=False)
          (1): LayerNorm((2304,), eps=1e-05, elementwise_affine=True)
          (2): Sigmoid()
        )
        (fc_atten4): Sequential(
          (0): Linear(in_features=2304, out_features=2304, bias=False)
          (1): LayerNorm((2304,), eps=1e-05, elementwise_affine=True)
          (2): Sigmoid()
        )
        (input_weight_net): Sequential(
          (0): Linear(in_features=2304, out_features=768, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=768, out_features=3, bias=True)
          (3): Softmax(dim=-1)
        )
        (gate_fc): Sequential(
          (0): Linear(in_features=2304, out_features=2304, bias=False)
          (1): Sigmoid()
        )
        (gate_enhancement): Sequential(
          (0): Linear(in_features=2304, out_features=2304, bias=True)
          (1): Tanh()
        )
        (fc_redu): Sequential(
          (0): Linear(in_features=2304, out_features=768, bias=False)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (residual_fc1): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=False)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (residual_fc2): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=False)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (residual_fc3): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=False)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (residual_fusion): Sequential(
          (0): Linear(in_features=2304, out_features=768, bias=False)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (fc1): Linear(in_features=768, out_features=1, bias=True)
        (fc2): Linear(in_features=768, out_features=1, bias=True)
        (fc3): Linear(in_features=768, out_features=1, bias=True)
        (attention_fusion): Sequential(
          (0): Linear(in_features=3, out_features=1, bias=True)
          (1): Sigmoid()
        )
      )
      (quad_dffs): QuadInputHierarchicalDFF(
        (stage1_triple_dff): TripleInputDirectDFF(
          (avg_pool1): AdaptiveAvgPool1d(output_size=1)
          (avg_pool2): AdaptiveAvgPool1d(output_size=2)
          (avg_pool4): AdaptiveAvgPool1d(output_size=4)
          (fc_atten1): Sequential(
            (0): Linear(in_features=2304, out_features=2304, bias=False)
            (1): LayerNorm((2304,), eps=1e-05, elementwise_affine=True)
            (2): Sigmoid()
          )
          (fc_atten2): Sequential(
            (0): Linear(in_features=2304, out_features=2304, bias=False)
            (1): LayerNorm((2304,), eps=1e-05, elementwise_affine=True)
            (2): Sigmoid()
          )
          (fc_atten4): Sequential(
            (0): Linear(in_features=2304, out_features=2304, bias=False)
            (1): LayerNorm((2304,), eps=1e-05, elementwise_affine=True)
            (2): Sigmoid()
          )
          (input_weight_net): Sequential(
            (0): Linear(in_features=2304, out_features=768, bias=True)
            (1): ReLU(inplace=True)
            (2): Linear(in_features=768, out_features=3, bias=True)
            (3): Softmax(dim=-1)
          )
          (gate_fc): Sequential(
            (0): Linear(in_features=2304, out_features=2304, bias=False)
            (1): Sigmoid()
          )
          (gate_enhancement): Sequential(
            (0): Linear(in_features=2304, out_features=2304, bias=True)
            (1): Tanh()
          )
          (fc_redu): Sequential(
            (0): Linear(in_features=2304, out_features=768, bias=False)
            (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (2): ReLU(inplace=True)
          )
          (residual_fc1): Sequential(
            (0): Linear(in_features=768, out_features=768, bias=False)
            (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (residual_fc2): Sequential(
            (0): Linear(in_features=768, out_features=768, bias=False)
            (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (residual_fc3): Sequential(
            (0): Linear(in_features=768, out_features=768, bias=False)
            (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (residual_fusion): Sequential(
            (0): Linear(in_features=2304, out_features=768, bias=False)
            (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (fc1): Linear(in_features=768, out_features=1, bias=True)
          (fc2): Linear(in_features=768, out_features=1, bias=True)
          (fc3): Linear(in_features=768, out_features=1, bias=True)
          (attention_fusion): Sequential(
            (0): Linear(in_features=3, out_features=1, bias=True)
            (1): Sigmoid()
          )
        )
        (stage1_enhancement): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=True)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=768, out_features=192, bias=True)
          (4): ReLU(inplace=True)
          (5): Linear(in_features=192, out_features=768, bias=True)
          (6): Sigmoid()
        )
        (input4_preprocessing): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=True)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=768, out_features=768, bias=True)
          (4): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (cross_stage_attention): Sequential(
          (0): Linear(in_features=768, out_features=96, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=96, out_features=768, bias=True)
          (3): Sigmoid()
        )
        (adaptive_fusion_weight): Sequential(
          (0): Linear(in_features=1536, out_features=192, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=192, out_features=2, bias=True)
          (3): Softmax(dim=-1)
        )
        (stage2_dff): InnovativeDFF(
          (avg_pool1): AdaptiveAvgPool1d(output_size=1)
          (avg_pool2): AdaptiveAvgPool1d(output_size=2)
          (avg_pool3): AdaptiveAvgPool1d(output_size=4)
          (fc_atten1): Sequential(
            (0): Linear(in_features=1536, out_features=1536, bias=False)
            (1): Sigmoid()
          )
          (fc_atten2): Sequential(
            (0): Linear(in_features=1536, out_features=1536, bias=False)
            (1): Sigmoid()
          )
          (fc_atten3): Sequential(
            (0): Linear(in_features=1536, out_features=1536, bias=False)
            (1): Sigmoid()
          )
          (gate_fc): Sequential(
            (0): Linear(in_features=1536, out_features=1536, bias=False)
            (1): Sigmoid()
          )
          (fc_redu): Linear(in_features=1536, out_features=768, bias=False)
          (residual_fc): Linear(in_features=768, out_features=768, bias=False)
          (fc1): Linear(in_features=768, out_features=1, bias=True)
          (fc2): Linear(in_features=768, out_features=1, bias=True)
          (nonlin): Sigmoid()
        )
        (memory_input1): Linear(in_features=768, out_features=768, bias=False)
        (memory_input4): Linear(in_features=768, out_features=768, bias=False)
        (memory_fusion): Sequential(
          (0): Linear(in_features=1536, out_features=768, bias=False)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (global_context): Sequential(
          (0): Linear(in_features=768, out_features=384, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=384, out_features=768, bias=True)
          (3): Sigmoid()
        )
        (final_refinement): Sequential(
          (0): Linear(in_features=768, out_features=768, bias=True)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
          (3): Linear(in_features=768, out_features=768, bias=True)
          (4): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
      )
      (gated_enhancement): SimpleModalityGate(
        (fusion_net): Sequential(
          (0): Linear(in_features=1536, out_features=768, bias=True)
          (1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (2): ReLU(inplace=True)
        )
        (gate_net): Sequential(
          (0): Linear(in_features=1536, out_features=768, bias=True)
          (1): Sigmoid()
        )
        (weight_net): Sequential(
          (0): Linear(in_features=1536, out_features=2, bias=True)
          (1): Softmax(dim=-1)
        )
      )
    )
  )
  (pool): AdaptiveAvgPool1d(output_size=1)
  (rgb_reduce): Sequential(
    (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=1024, out_features=512, bias=True)
    (2): QuickGELU()
  )
  (nir_reduce): Sequential(
    (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=1024, out_features=512, bias=True)
    (2): QuickGELU()
  )
  (tir_reduce): Sequential(
    (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=1024, out_features=512, bias=True)
    (2): QuickGELU()
  )
  (generalFusion): GeneralFusion(
    (r): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (n): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (t): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (rn): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (rt): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (nt): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (rnt): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
    )
    (moe): MoM(
      (experts): ModuleList(
        (0): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (1): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (2): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (3): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (4): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (5): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (6): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
        (7): ExpertHead(
          (expertHead): ModuleList(
            (0): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (5): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (6): Expert(
              (mlp): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=True)
                (1): QuickGELU()
                (2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
          )
        )
      )
      (gating_network): GatingNetwork(
        (gate): CrossAttention(
          (linear_re): Sequential(
            (0): Linear(in_features=3584, out_features=512, bias=True)
            (1): QuickGELU()
            (2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (q_): Linear(in_features=512, out_features=512, bias=False)
          (k_): Linear(in_features=512, out_features=512, bias=False)
        )
      )
    )
    (multimodal_token_se): MultiModalTokenSE(
      (rgb_aggregator): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=True)
        (3): Sigmoid()
      )
      (nir_aggregator): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=True)
        (3): Sigmoid()
      )
      (tir_aggregator): Sequential(
        (0): Linear(in_features=128, out_features=32, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=32, out_features=128, bias=True)
        (3): Sigmoid()
      )
      (adaptive_weighting): AdaptiveWeighting(
        (weight_net): Sequential(
          (0): Linear(in_features=384, out_features=128, bias=True)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=128, out_features=384, bias=True)
          (3): Softmax(dim=-1)
        )
      )
      (global_context_net): Sequential(
        (0): Linear(in_features=384, out_features=128, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=128, out_features=128, bias=True)
        (3): Sigmoid()
      )
      (modal_balance): Sequential(
        (0): Linear(in_features=3, out_features=8, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=8, out_features=3, bias=True)
        (3): Softmax(dim=-1)
      )
      (enhancement_net): Sequential(
        (0): Linear(in_features=384, out_features=128, bias=True)
        (1): ReLU(inplace=True)
        (2): Linear(in_features=128, out_features=128, bias=True)
        (3): Sigmoid()
      )
    )
    (feature_diversifiers): ModuleList(
      (0): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
      (1): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
      (2): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
      (3): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
      (4): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
      (5): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
      (6): FeatureDiversifier(
        (diversify_net): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (2): ReLU()
          (3): Linear(in_features=512, out_features=512, bias=True)
        )
      )
    )
  )
  (classifier_moe): Linear(in_features=3584, out_features=50, bias=False)
  (bottleneck_moe): BatchNorm1d(3584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier_r): Linear(in_features=512, out_features=50, bias=False)
  (bottleneck_r): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier_n): Linear(in_features=512, out_features=50, bias=False)
  (bottleneck_n): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier_t): Linear(in_features=512, out_features=50, bias=False)
  (bottleneck_t): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
2025-05-27 20:20:35,222 DeMo INFO: number of parameters:189.411101
using soft triplet loss for training
label smooth on, numclasses: 50
2025-05-27 20:20:35,303 DeMo.train INFO: start training
diversityweight: 6.0
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/timm/models/helpers.py:7: FutureWarning: Importing from timm.models.helpers is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/timm/models/registry.py:4: FutureWarning: Importing from timm.models.registry is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/ma1/work/demorelated/DeMo/modeling/clip/clip.py:23: UserWarning: PyTorch version 1.7.1 or higher is recommended
  warnings.warn("PyTorch version 1.7.1 or higher is recommended")
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/mmcv/__init__.py:20: UserWarning: On January 1, 2023, MMCV will release v2.0.0, in which it will remove components related to the training process and add a data transformation module. In addition, it will rename the package names mmcv to mmcv-lite and mmcv-full to mmcv. See https://github.com/open-mmlab/mmcv/blob/master/docs/en/compatibility.md for more details.
  warnings.warn(
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torchvision/transforms/transforms.py:329: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  warnings.warn(
2025-05-27 20:20:58,102 DeMo.train INFO: Epoch[1] Iteration[10/129] Loss: 12.171, Acc: 0.030, Base Lr: 9.80e-05
2025-05-27 20:21:05,267 DeMo.train INFO: Epoch[1] Iteration[20/129] Loss: 10.308, Acc: 0.068, Base Lr: 9.80e-05
2025-05-27 20:21:12,303 DeMo.train INFO: Epoch[1] Iteration[30/129] Loss: 9.465, Acc: 0.110, Base Lr: 9.80e-05
2025-05-27 20:21:19,370 DeMo.train INFO: Epoch[1] Iteration[40/129] Loss: 8.929, Acc: 0.145, Base Lr: 9.80e-05
2025-05-27 20:21:26,588 DeMo.train INFO: Epoch[1] Iteration[50/129] Loss: 8.560, Acc: 0.173, Base Lr: 9.80e-05
2025-05-27 20:21:33,824 DeMo.train INFO: Epoch[1] Iteration[60/129] Loss: 8.286, Acc: 0.195, Base Lr: 9.80e-05
2025-05-27 20:21:40,927 DeMo.train INFO: Epoch[1] Iteration[70/129] Loss: 8.054, Acc: 0.228, Base Lr: 9.80e-05
2025-05-27 20:21:47,998 DeMo.train INFO: Epoch[1] Iteration[80/129] Loss: 7.842, Acc: 0.250, Base Lr: 9.80e-05
2025-05-27 20:21:55,087 DeMo.train INFO: Epoch[1] Iteration[90/129] Loss: 7.681, Acc: 0.270, Base Lr: 9.80e-05
2025-05-27 20:22:02,182 DeMo.train INFO: Epoch[1] Iteration[100/129] Loss: 7.531, Acc: 0.282, Base Lr: 9.80e-05
2025-05-27 20:22:09,248 DeMo.train INFO: Epoch[1] Iteration[110/129] Loss: 7.378, Acc: 0.298, Base Lr: 9.80e-05
2025-05-27 20:22:16,318 DeMo.train INFO: Epoch[1] Iteration[120/129] Loss: 7.232, Acc: 0.310, Base Lr: 9.80e-05
2025-05-27 20:22:21,365 DeMo.train INFO: Epoch 1 done. Time per batch: 0.824[s] Speed: 77.7[samples/s]
2025-05-27 20:22:21,368 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:22:21,368 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 20:22:21,368 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.5958
CMC curve: Rank-1: 0.8402, Rank-5: 0.8717, Rank-10: 0.8904
=> Enter reranking
=> Results after reranking:
mAP: 0.6144
CMC curve: Rank-1: 0.8571, Rank-5: 0.8665, Rank-10: 0.8741
=> Improvement:
mAP improvement: 0.0186 (+3.13%)
Rank-1 improvement: 0.0169 (+2.01%)
2025-05-27 20:25:29,071 DeMo.train INFO: Validation Results - Epoch: 1
2025-05-27 20:25:29,072 DeMo.train INFO: mAP: 61.4%
2025-05-27 20:25:29,072 DeMo.train INFO: CMC curve, Rank-1  :85.7%
2025-05-27 20:25:29,072 DeMo.train INFO: CMC curve, Rank-5  :86.6%
2025-05-27 20:25:29,072 DeMo.train INFO: CMC curve, Rank-10 :87.4%
2025-05-27 20:25:29,072 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:25:29,158 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:25:29,159 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 20:25:29,159 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/ma1/work/demorelated/DeMo/utils/reranking.py:40: UserWarning: This overload of addmm_ is deprecated:
	addmm_(Number beta, Number alpha, Tensor mat1, Tensor mat2)
Consider using one of the following signatures instead:
	addmm_(Tensor mat1, Tensor mat2, *, Number beta, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1420.)
  distmat.addmm_(1, -2, feat, feat.t())
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6328
CMC curve: Rank-1: 0.8350, Rank-5: 0.8595, Rank-10: 0.8752
=> Enter reranking
=> Results after reranking:
mAP: 0.6407
CMC curve: Rank-1: 0.8385, Rank-5: 0.8461, Rank-10: 0.8554
=> Improvement:
mAP improvement: 0.0078 (+1.24%)
Rank-1 improvement: 0.0035 (+0.42%)
2025-05-27 20:28:40,181 DeMo.train INFO: Validation Results - Epoch: 1
2025-05-27 20:28:40,182 DeMo.train INFO: mAP: 64.1%
2025-05-27 20:28:40,182 DeMo.train INFO: CMC curve, Rank-1  :83.8%
2025-05-27 20:28:40,182 DeMo.train INFO: CMC curve, Rank-5  :84.6%
2025-05-27 20:28:40,182 DeMo.train INFO: CMC curve, Rank-10 :85.5%
2025-05-27 20:28:40,182 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:28:40,831 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:28:40,831 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 20:28:40,832 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6430
CMC curve: Rank-1: 0.8484, Rank-5: 0.8770, Rank-10: 0.8945
=> Enter reranking
=> Results after reranking:
mAP: 0.6531
CMC curve: Rank-1: 0.8548, Rank-5: 0.8671, Rank-10: 0.8717
=> Improvement:
mAP improvement: 0.0101 (+1.57%)
Rank-1 improvement: 0.0064 (+0.76%)
2025-05-27 20:31:52,804 DeMo.train INFO: Validation Results - Epoch: 1
2025-05-27 20:31:52,805 DeMo.train INFO: mAP: 65.3%
2025-05-27 20:31:52,805 DeMo.train INFO: CMC curve, Rank-1  :85.5%
2025-05-27 20:31:52,805 DeMo.train INFO: CMC curve, Rank-5  :86.7%
2025-05-27 20:31:52,805 DeMo.train INFO: CMC curve, Rank-10 :87.2%
2025-05-27 20:31:52,805 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:31:59,400 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:31:59,401 DeMo.train INFO: Best mAP: 65.3%
2025-05-27 20:31:59,401 DeMo.train INFO: Best Rank-1: 85.5%
2025-05-27 20:31:59,401 DeMo.train INFO: Best Rank-5: 86.7%
2025-05-27 20:31:59,401 DeMo.train INFO: Best Rank-10: 87.2%
2025-05-27 20:31:59,401 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:32:10,561 DeMo.train INFO: Epoch[2] Iteration[10/129] Loss: 5.719, Acc: 0.327, Base Lr: 1.61e-04
2025-05-27 20:32:17,647 DeMo.train INFO: Epoch[2] Iteration[20/129] Loss: 6.132, Acc: 0.313, Base Lr: 1.61e-04
2025-05-27 20:32:24,704 DeMo.train INFO: Epoch[2] Iteration[30/129] Loss: 6.234, Acc: 0.346, Base Lr: 1.61e-04
2025-05-27 20:32:31,737 DeMo.train INFO: Epoch[2] Iteration[40/129] Loss: 6.121, Acc: 0.326, Base Lr: 1.61e-04
2025-05-27 20:32:38,790 DeMo.train INFO: Epoch[2] Iteration[50/129] Loss: 5.967, Acc: 0.312, Base Lr: 1.61e-04
2025-05-27 20:32:45,838 DeMo.train INFO: Epoch[2] Iteration[60/129] Loss: 5.879, Acc: 0.327, Base Lr: 1.61e-04
2025-05-27 20:32:53,579 DeMo.train INFO: Epoch[2] Iteration[70/129] Loss: 5.798, Acc: 0.316, Base Lr: 1.61e-04
2025-05-27 20:33:00,583 DeMo.train INFO: Epoch[2] Iteration[80/129] Loss: 5.717, Acc: 0.311, Base Lr: 1.61e-04
2025-05-27 20:33:07,587 DeMo.train INFO: Epoch[2] Iteration[90/129] Loss: 5.626, Acc: 0.327, Base Lr: 1.61e-04
2025-05-27 20:33:14,602 DeMo.train INFO: Epoch[2] Iteration[100/129] Loss: 5.492, Acc: 0.333, Base Lr: 1.61e-04
2025-05-27 20:33:21,635 DeMo.train INFO: Epoch[2] Iteration[110/129] Loss: 5.382, Acc: 0.349, Base Lr: 1.61e-04
2025-05-27 20:33:28,666 DeMo.train INFO: Epoch[2] Iteration[120/129] Loss: 5.301, Acc: 0.369, Base Lr: 1.61e-04
2025-05-27 20:33:33,968 DeMo.train INFO: Epoch 2 done. Time per batch: 0.745[s] Speed: 85.9[samples/s]
2025-05-27 20:33:33,972 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:33:33,972 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 20:33:33,972 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.5967
CMC curve: Rank-1: 0.7848, Rank-5: 0.8157, Rank-10: 0.8420
=> Enter reranking
=> Results after reranking:
mAP: 0.6037
CMC curve: Rank-1: 0.7977, Rank-5: 0.8064, Rank-10: 0.8187
=> Improvement:
mAP improvement: 0.0070 (+1.17%)
Rank-1 improvement: 0.0128 (+1.63%)
2025-05-27 20:36:40,191 DeMo.train INFO: Validation Results - Epoch: 2
2025-05-27 20:36:40,192 DeMo.train INFO: mAP: 60.4%
2025-05-27 20:36:40,192 DeMo.train INFO: CMC curve, Rank-1  :79.8%
2025-05-27 20:36:40,192 DeMo.train INFO: CMC curve, Rank-5  :80.6%
2025-05-27 20:36:40,192 DeMo.train INFO: CMC curve, Rank-10 :81.9%
2025-05-27 20:36:40,192 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:36:41,436 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:36:41,437 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 20:36:41,437 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6140
CMC curve: Rank-1: 0.7942, Rank-5: 0.8257, Rank-10: 0.8437
=> Enter reranking
=> Results after reranking:
mAP: 0.6217
CMC curve: Rank-1: 0.8157, Rank-5: 0.8222, Rank-10: 0.8350
=> Improvement:
mAP improvement: 0.0076 (+1.24%)
Rank-1 improvement: 0.0216 (+2.72%)
2025-05-27 20:39:40,833 DeMo.train INFO: Validation Results - Epoch: 2
2025-05-27 20:39:40,833 DeMo.train INFO: mAP: 62.2%
2025-05-27 20:39:40,834 DeMo.train INFO: CMC curve, Rank-1  :81.6%
2025-05-27 20:39:40,834 DeMo.train INFO: CMC curve, Rank-5  :82.2%
2025-05-27 20:39:40,834 DeMo.train INFO: CMC curve, Rank-10 :83.5%
2025-05-27 20:39:40,834 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:39:41,070 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:39:41,070 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 20:39:41,070 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6164
CMC curve: Rank-1: 0.8076, Rank-5: 0.8309, Rank-10: 0.8472
=> Enter reranking
=> Results after reranking:
mAP: 0.6227
CMC curve: Rank-1: 0.8117, Rank-5: 0.8210, Rank-10: 0.8397
=> Improvement:
mAP improvement: 0.0063 (+1.02%)
Rank-1 improvement: 0.0041 (+0.51%)
2025-05-27 20:42:41,382 DeMo.train INFO: Validation Results - Epoch: 2
2025-05-27 20:42:41,382 DeMo.train INFO: mAP: 62.3%
2025-05-27 20:42:41,382 DeMo.train INFO: CMC curve, Rank-1  :81.2%
2025-05-27 20:42:41,382 DeMo.train INFO: CMC curve, Rank-5  :82.1%
2025-05-27 20:42:41,382 DeMo.train INFO: CMC curve, Rank-10 :84.0%
2025-05-27 20:42:41,382 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:42:41,778 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:42:41,778 DeMo.train INFO: Best mAP: 65.3%
2025-05-27 20:42:41,778 DeMo.train INFO: Best Rank-1: 85.5%
2025-05-27 20:42:41,778 DeMo.train INFO: Best Rank-5: 86.7%
2025-05-27 20:42:41,779 DeMo.train INFO: Best Rank-10: 87.2%
2025-05-27 20:42:41,779 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:42:52,486 DeMo.train INFO: Epoch[3] Iteration[10/129] Loss: 5.470, Acc: 0.400, Base Lr: 2.24e-04
2025-05-27 20:42:59,475 DeMo.train INFO: Epoch[3] Iteration[20/129] Loss: 4.940, Acc: 0.409, Base Lr: 2.24e-04
2025-05-27 20:43:06,473 DeMo.train INFO: Epoch[3] Iteration[30/129] Loss: 4.459, Acc: 0.463, Base Lr: 2.24e-04
2025-05-27 20:43:13,503 DeMo.train INFO: Epoch[3] Iteration[40/129] Loss: 4.114, Acc: 0.459, Base Lr: 2.24e-04
2025-05-27 20:43:20,519 DeMo.train INFO: Epoch[3] Iteration[50/129] Loss: 3.947, Acc: 0.456, Base Lr: 2.24e-04
2025-05-27 20:43:27,534 DeMo.train INFO: Epoch[3] Iteration[60/129] Loss: 3.836, Acc: 0.464, Base Lr: 2.24e-04
2025-05-27 20:43:34,589 DeMo.train INFO: Epoch[3] Iteration[70/129] Loss: 3.732, Acc: 0.485, Base Lr: 2.24e-04
2025-05-27 20:43:41,585 DeMo.train INFO: Epoch[3] Iteration[80/129] Loss: 3.643, Acc: 0.515, Base Lr: 2.24e-04
2025-05-27 20:43:48,529 DeMo.train INFO: Epoch[3] Iteration[90/129] Loss: 3.607, Acc: 0.521, Base Lr: 2.24e-04
2025-05-27 20:43:55,546 DeMo.train INFO: Epoch[3] Iteration[100/129] Loss: 3.552, Acc: 0.537, Base Lr: 2.24e-04
2025-05-27 20:44:02,509 DeMo.train INFO: Epoch[3] Iteration[110/129] Loss: 3.486, Acc: 0.552, Base Lr: 2.24e-04
2025-05-27 20:44:09,468 DeMo.train INFO: Epoch[3] Iteration[120/129] Loss: 3.397, Acc: 0.564, Base Lr: 2.24e-04
2025-05-27 20:44:15,207 DeMo.train INFO: Epoch 3 done. Time per batch: 0.730[s] Speed: 87.7[samples/s]
2025-05-27 20:44:15,212 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:44:15,212 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 20:44:15,212 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6292
CMC curve: Rank-1: 0.8169, Rank-5: 0.8461, Rank-10: 0.8630
=> Enter reranking
=> Results after reranking:
mAP: 0.6365
CMC curve: Rank-1: 0.8309, Rank-5: 0.8379, Rank-10: 0.8443
=> Improvement:
mAP improvement: 0.0073 (+1.16%)
Rank-1 improvement: 0.0140 (+1.71%)
2025-05-27 20:47:15,152 DeMo.train INFO: Validation Results - Epoch: 3
2025-05-27 20:47:15,152 DeMo.train INFO: mAP: 63.6%
2025-05-27 20:47:15,152 DeMo.train INFO: CMC curve, Rank-1  :83.1%
2025-05-27 20:47:15,152 DeMo.train INFO: CMC curve, Rank-5  :83.8%
2025-05-27 20:47:15,153 DeMo.train INFO: CMC curve, Rank-10 :84.4%
2025-05-27 20:47:15,153 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:47:15,679 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:47:15,680 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 20:47:15,680 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6852
CMC curve: Rank-1: 0.8513, Rank-5: 0.8700, Rank-10: 0.8810
=> Enter reranking
=> Results after reranking:
mAP: 0.6911
CMC curve: Rank-1: 0.8595, Rank-5: 0.8653, Rank-10: 0.8729
=> Improvement:
mAP improvement: 0.0059 (+0.87%)
Rank-1 improvement: 0.0082 (+0.96%)
2025-05-27 20:50:17,101 DeMo.train INFO: Validation Results - Epoch: 3
2025-05-27 20:50:17,102 DeMo.train INFO: mAP: 69.1%
2025-05-27 20:50:17,102 DeMo.train INFO: CMC curve, Rank-1  :85.9%
2025-05-27 20:50:17,102 DeMo.train INFO: CMC curve, Rank-5  :86.5%
2025-05-27 20:50:17,102 DeMo.train INFO: CMC curve, Rank-10 :87.3%
2025-05-27 20:50:17,102 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:50:18,447 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:50:18,448 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 20:50:18,448 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6484
CMC curve: Rank-1: 0.8408, Rank-5: 0.8612, Rank-10: 0.8741
=> Enter reranking
=> Results after reranking:
mAP: 0.6545
CMC curve: Rank-1: 0.8338, Rank-5: 0.8426, Rank-10: 0.8472
=> Improvement:
mAP improvement: 0.0060 (+0.93%)
Rank-1 improvement: -0.0070 (-0.83%)
2025-05-27 20:53:27,608 DeMo.train INFO: Validation Results - Epoch: 3
2025-05-27 20:53:27,608 DeMo.train INFO: mAP: 65.4%
2025-05-27 20:53:27,609 DeMo.train INFO: CMC curve, Rank-1  :83.4%
2025-05-27 20:53:27,609 DeMo.train INFO: CMC curve, Rank-5  :84.3%
2025-05-27 20:53:27,609 DeMo.train INFO: CMC curve, Rank-10 :84.7%
2025-05-27 20:53:27,609 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:53:35,729 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:53:35,729 DeMo.train INFO: Best mAP: 65.4%
2025-05-27 20:53:35,729 DeMo.train INFO: Best Rank-1: 83.4%
2025-05-27 20:53:35,729 DeMo.train INFO: Best Rank-5: 84.3%
2025-05-27 20:53:35,729 DeMo.train INFO: Best Rank-10: 84.7%
2025-05-27 20:53:35,729 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:53:46,907 DeMo.train INFO: Epoch[4] Iteration[10/129] Loss: 2.984, Acc: 0.547, Base Lr: 2.87e-04
2025-05-27 20:53:53,923 DeMo.train INFO: Epoch[4] Iteration[20/129] Loss: 2.951, Acc: 0.585, Base Lr: 2.87e-04
2025-05-27 20:54:00,979 DeMo.train INFO: Epoch[4] Iteration[30/129] Loss: 2.890, Acc: 0.615, Base Lr: 2.87e-04
2025-05-27 20:54:08,128 DeMo.train INFO: Epoch[4] Iteration[40/129] Loss: 2.723, Acc: 0.642, Base Lr: 2.87e-04
2025-05-27 20:54:15,136 DeMo.train INFO: Epoch[4] Iteration[50/129] Loss: 2.689, Acc: 0.651, Base Lr: 2.87e-04
2025-05-27 20:54:22,138 DeMo.train INFO: Epoch[4] Iteration[60/129] Loss: 2.620, Acc: 0.678, Base Lr: 2.87e-04
2025-05-27 20:54:29,159 DeMo.train INFO: Epoch[4] Iteration[70/129] Loss: 2.604, Acc: 0.689, Base Lr: 2.87e-04
2025-05-27 20:54:36,155 DeMo.train INFO: Epoch[4] Iteration[80/129] Loss: 2.527, Acc: 0.696, Base Lr: 2.87e-04
2025-05-27 20:54:43,359 DeMo.train INFO: Epoch[4] Iteration[90/129] Loss: 2.468, Acc: 0.714, Base Lr: 2.87e-04
2025-05-27 20:54:50,386 DeMo.train INFO: Epoch[4] Iteration[100/129] Loss: 2.435, Acc: 0.725, Base Lr: 2.87e-04
2025-05-27 20:54:57,414 DeMo.train INFO: Epoch[4] Iteration[110/129] Loss: 2.398, Acc: 0.737, Base Lr: 2.87e-04
2025-05-27 20:55:04,460 DeMo.train INFO: Epoch[4] Iteration[120/129] Loss: 2.352, Acc: 0.755, Base Lr: 2.87e-04
2025-05-27 20:55:10,205 DeMo.train INFO: Epoch 4 done. Time per batch: 0.738[s] Speed: 86.7[samples/s]
2025-05-27 20:55:10,212 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:55:10,212 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 20:55:10,213 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7097
CMC curve: Rank-1: 0.8566, Rank-5: 0.8723, Rank-10: 0.8810
=> Enter reranking
=> Results after reranking:
mAP: 0.7163
CMC curve: Rank-1: 0.8583, Rank-5: 0.8665, Rank-10: 0.8752
=> Improvement:
mAP improvement: 0.0066 (+0.93%)
Rank-1 improvement: 0.0017 (+0.20%)
2025-05-27 20:58:08,858 DeMo.train INFO: Validation Results - Epoch: 4
2025-05-27 20:58:08,859 DeMo.train INFO: mAP: 71.6%
2025-05-27 20:58:08,859 DeMo.train INFO: CMC curve, Rank-1  :85.8%
2025-05-27 20:58:08,859 DeMo.train INFO: CMC curve, Rank-5  :86.6%
2025-05-27 20:58:08,859 DeMo.train INFO: CMC curve, Rank-10 :87.5%
2025-05-27 20:58:08,859 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:58:10,293 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 20:58:10,293 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 20:58:10,293 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7113
CMC curve: Rank-1: 0.8624, Rank-5: 0.8793, Rank-10: 0.8886
=> Enter reranking
=> Results after reranking:
mAP: 0.7208
CMC curve: Rank-1: 0.8746, Rank-5: 0.8805, Rank-10: 0.8845
=> Improvement:
mAP improvement: 0.0095 (+1.34%)
Rank-1 improvement: 0.0122 (+1.42%)
2025-05-27 21:01:09,821 DeMo.train INFO: Validation Results - Epoch: 4
2025-05-27 21:01:09,821 DeMo.train INFO: mAP: 72.1%
2025-05-27 21:01:09,822 DeMo.train INFO: CMC curve, Rank-1  :87.5%
2025-05-27 21:01:09,822 DeMo.train INFO: CMC curve, Rank-5  :88.0%
2025-05-27 21:01:09,822 DeMo.train INFO: CMC curve, Rank-10 :88.5%
2025-05-27 21:01:09,822 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:01:09,836 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:01:09,836 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 21:01:09,836 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7168
CMC curve: Rank-1: 0.8571, Rank-5: 0.8770, Rank-10: 0.8845
=> Enter reranking
=> Results after reranking:
mAP: 0.7243
CMC curve: Rank-1: 0.8653, Rank-5: 0.8706, Rank-10: 0.8781
=> Improvement:
mAP improvement: 0.0074 (+1.04%)
Rank-1 improvement: 0.0082 (+0.95%)
2025-05-27 21:04:08,702 DeMo.train INFO: Validation Results - Epoch: 4
2025-05-27 21:04:08,702 DeMo.train INFO: mAP: 72.4%
2025-05-27 21:04:08,702 DeMo.train INFO: CMC curve, Rank-1  :86.5%
2025-05-27 21:04:08,702 DeMo.train INFO: CMC curve, Rank-5  :87.1%
2025-05-27 21:04:08,702 DeMo.train INFO: CMC curve, Rank-10 :87.8%
2025-05-27 21:04:08,702 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:04:16,700 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:04:16,700 DeMo.train INFO: Best mAP: 72.4%
2025-05-27 21:04:16,700 DeMo.train INFO: Best Rank-1: 86.5%
2025-05-27 21:04:16,700 DeMo.train INFO: Best Rank-5: 87.1%
2025-05-27 21:04:16,700 DeMo.train INFO: Best Rank-10: 87.8%
2025-05-27 21:04:16,700 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:04:27,287 DeMo.train INFO: Epoch[5] Iteration[10/129] Loss: 2.200, Acc: 0.816, Base Lr: 3.27e-04
2025-05-27 21:04:34,286 DeMo.train INFO: Epoch[5] Iteration[20/129] Loss: 2.061, Acc: 0.766, Base Lr: 3.27e-04
2025-05-27 21:04:41,299 DeMo.train INFO: Epoch[5] Iteration[30/129] Loss: 2.003, Acc: 0.778, Base Lr: 3.27e-04
2025-05-27 21:04:48,328 DeMo.train INFO: Epoch[5] Iteration[40/129] Loss: 1.958, Acc: 0.752, Base Lr: 3.27e-04
2025-05-27 21:04:55,329 DeMo.train INFO: Epoch[5] Iteration[50/129] Loss: 1.930, Acc: 0.755, Base Lr: 3.27e-04
2025-05-27 21:05:02,359 DeMo.train INFO: Epoch[5] Iteration[60/129] Loss: 1.897, Acc: 0.753, Base Lr: 3.27e-04
2025-05-27 21:05:09,600 DeMo.train INFO: Epoch[5] Iteration[70/129] Loss: 1.880, Acc: 0.741, Base Lr: 3.27e-04
2025-05-27 21:05:16,744 DeMo.train INFO: Epoch[5] Iteration[80/129] Loss: 1.881, Acc: 0.734, Base Lr: 3.27e-04
2025-05-27 21:05:23,786 DeMo.train INFO: Epoch[5] Iteration[90/129] Loss: 1.864, Acc: 0.733, Base Lr: 3.27e-04
2025-05-27 21:05:30,847 DeMo.train INFO: Epoch[5] Iteration[100/129] Loss: 1.854, Acc: 0.743, Base Lr: 3.27e-04
2025-05-27 21:05:37,874 DeMo.train INFO: Epoch[5] Iteration[110/129] Loss: 1.836, Acc: 0.753, Base Lr: 3.27e-04
2025-05-27 21:05:44,916 DeMo.train INFO: Epoch[5] Iteration[120/129] Loss: 1.809, Acc: 0.764, Base Lr: 3.27e-04
2025-05-27 21:05:50,674 DeMo.train INFO: Epoch 5 done. Time per batch: 0.734[s] Speed: 87.2[samples/s]
2025-05-27 21:05:50,681 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:05:50,681 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 21:05:50,682 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7536
CMC curve: Rank-1: 0.8857, Rank-5: 0.9050, Rank-10: 0.9195
=> Enter reranking
=> Results after reranking:
mAP: 0.7580
CMC curve: Rank-1: 0.9003, Rank-5: 0.9079, Rank-10: 0.9143
=> Improvement:
mAP improvement: 0.0044 (+0.58%)
Rank-1 improvement: 0.0146 (+1.65%)
2025-05-27 21:08:48,620 DeMo.train INFO: Validation Results - Epoch: 5
2025-05-27 21:08:48,620 DeMo.train INFO: mAP: 75.8%
2025-05-27 21:08:48,620 DeMo.train INFO: CMC curve, Rank-1  :90.0%
2025-05-27 21:08:48,620 DeMo.train INFO: CMC curve, Rank-5  :90.8%
2025-05-27 21:08:48,621 DeMo.train INFO: CMC curve, Rank-10 :91.4%
2025-05-27 21:08:48,621 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:08:49,520 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:08:49,520 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 21:08:49,520 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.6994
CMC curve: Rank-1: 0.8700, Rank-5: 0.8834, Rank-10: 0.8933
=> Enter reranking
=> Results after reranking:
mAP: 0.7057
CMC curve: Rank-1: 0.8746, Rank-5: 0.8793, Rank-10: 0.8834
=> Improvement:
mAP improvement: 0.0063 (+0.89%)
Rank-1 improvement: 0.0047 (+0.54%)
2025-05-27 21:11:49,436 DeMo.train INFO: Validation Results - Epoch: 5
2025-05-27 21:11:49,436 DeMo.train INFO: mAP: 70.6%
2025-05-27 21:11:49,436 DeMo.train INFO: CMC curve, Rank-1  :87.5%
2025-05-27 21:11:49,436 DeMo.train INFO: CMC curve, Rank-5  :87.9%
2025-05-27 21:11:49,436 DeMo.train INFO: CMC curve, Rank-10 :88.3%
2025-05-27 21:11:49,437 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:11:50,478 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:11:50,479 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 21:11:50,479 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7571
CMC curve: Rank-1: 0.8880, Rank-5: 0.9079, Rank-10: 0.9190
=> Enter reranking
=> Results after reranking:
mAP: 0.7627
CMC curve: Rank-1: 0.8980, Rank-5: 0.9073, Rank-10: 0.9137
=> Improvement:
mAP improvement: 0.0056 (+0.74%)
Rank-1 improvement: 0.0099 (+1.12%)
2025-05-27 21:14:59,684 DeMo.train INFO: Validation Results - Epoch: 5
2025-05-27 21:14:59,684 DeMo.train INFO: mAP: 76.3%
2025-05-27 21:14:59,685 DeMo.train INFO: CMC curve, Rank-1  :89.8%
2025-05-27 21:14:59,685 DeMo.train INFO: CMC curve, Rank-5  :90.7%
2025-05-27 21:14:59,685 DeMo.train INFO: CMC curve, Rank-10 :91.4%
2025-05-27 21:14:59,685 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:15:07,830 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:15:07,831 DeMo.train INFO: Best mAP: 76.3%
2025-05-27 21:15:07,831 DeMo.train INFO: Best Rank-1: 89.8%
2025-05-27 21:15:07,831 DeMo.train INFO: Best Rank-5: 90.7%
2025-05-27 21:15:07,831 DeMo.train INFO: Best Rank-10: 91.4%
2025-05-27 21:15:07,831 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:15:18,564 DeMo.train INFO: Epoch[6] Iteration[10/129] Loss: 1.802, Acc: 0.659, Base Lr: 3.17e-04
2025-05-27 21:15:25,537 DeMo.train INFO: Epoch[6] Iteration[20/129] Loss: 1.665, Acc: 0.723, Base Lr: 3.17e-04
2025-05-27 21:15:32,505 DeMo.train INFO: Epoch[6] Iteration[30/129] Loss: 1.672, Acc: 0.734, Base Lr: 3.17e-04
2025-05-27 21:15:39,480 DeMo.train INFO: Epoch[6] Iteration[40/129] Loss: 1.630, Acc: 0.763, Base Lr: 3.17e-04
2025-05-27 21:15:46,440 DeMo.train INFO: Epoch[6] Iteration[50/129] Loss: 1.595, Acc: 0.778, Base Lr: 3.17e-04
2025-05-27 21:15:53,410 DeMo.train INFO: Epoch[6] Iteration[60/129] Loss: 1.552, Acc: 0.799, Base Lr: 3.17e-04
2025-05-27 21:16:00,398 DeMo.train INFO: Epoch[6] Iteration[70/129] Loss: 1.531, Acc: 0.819, Base Lr: 3.17e-04
2025-05-27 21:16:07,361 DeMo.train INFO: Epoch[6] Iteration[80/129] Loss: 1.515, Acc: 0.827, Base Lr: 3.17e-04
2025-05-27 21:16:14,332 DeMo.train INFO: Epoch[6] Iteration[90/129] Loss: 1.500, Acc: 0.839, Base Lr: 3.17e-04
2025-05-27 21:16:21,316 DeMo.train INFO: Epoch[6] Iteration[100/129] Loss: 1.479, Acc: 0.849, Base Lr: 3.17e-04
2025-05-27 21:16:28,319 DeMo.train INFO: Epoch[6] Iteration[110/129] Loss: 1.459, Acc: 0.857, Base Lr: 3.17e-04
2025-05-27 21:16:35,290 DeMo.train INFO: Epoch[6] Iteration[120/129] Loss: 1.440, Acc: 0.867, Base Lr: 3.17e-04
2025-05-27 21:16:41,067 DeMo.train INFO: Epoch 6 done. Time per batch: 0.728[s] Speed: 87.9[samples/s]
2025-05-27 21:16:41,085 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:16:41,085 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 21:16:41,086 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7666
CMC curve: Rank-1: 0.9032, Rank-5: 0.9254, Rank-10: 0.9364
=> Enter reranking
=> Results after reranking:
mAP: 0.7718
CMC curve: Rank-1: 0.9160, Rank-5: 0.9230, Rank-10: 0.9300
=> Improvement:
mAP improvement: 0.0052 (+0.68%)
Rank-1 improvement: 0.0128 (+1.42%)
2025-05-27 21:19:42,792 DeMo.train INFO: Validation Results - Epoch: 6
2025-05-27 21:19:42,792 DeMo.train INFO: mAP: 77.2%
2025-05-27 21:19:42,792 DeMo.train INFO: CMC curve, Rank-1  :91.6%
2025-05-27 21:19:42,793 DeMo.train INFO: CMC curve, Rank-5  :92.3%
2025-05-27 21:19:42,793 DeMo.train INFO: CMC curve, Rank-10 :93.0%
2025-05-27 21:19:42,793 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:19:43,006 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:19:43,007 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 21:19:43,007 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7363
CMC curve: Rank-1: 0.8816, Rank-5: 0.9044, Rank-10: 0.9172
=> Enter reranking
=> Results after reranking:
mAP: 0.7394
CMC curve: Rank-1: 0.8927, Rank-5: 0.9009, Rank-10: 0.9061
=> Improvement:
mAP improvement: 0.0031 (+0.41%)
Rank-1 improvement: 0.0111 (+1.26%)
2025-05-27 21:23:00,887 DeMo.train INFO: Validation Results - Epoch: 6
2025-05-27 21:23:00,887 DeMo.train INFO: mAP: 73.9%
2025-05-27 21:23:00,887 DeMo.train INFO: CMC curve, Rank-1  :89.3%
2025-05-27 21:23:00,887 DeMo.train INFO: CMC curve, Rank-5  :90.1%
2025-05-27 21:23:00,887 DeMo.train INFO: CMC curve, Rank-10 :90.6%
2025-05-27 21:23:00,887 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:23:01,377 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:23:01,378 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 21:23:01,378 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7729
CMC curve: Rank-1: 0.9073, Rank-5: 0.9259, Rank-10: 0.9394
=> Enter reranking
=> Results after reranking:
mAP: 0.7778
CMC curve: Rank-1: 0.9137, Rank-5: 0.9213, Rank-10: 0.9259
=> Improvement:
mAP improvement: 0.0049 (+0.63%)
Rank-1 improvement: 0.0064 (+0.71%)
2025-05-27 21:26:16,425 DeMo.train INFO: Validation Results - Epoch: 6
2025-05-27 21:26:16,425 DeMo.train INFO: mAP: 77.8%
2025-05-27 21:26:16,425 DeMo.train INFO: CMC curve, Rank-1  :91.4%
2025-05-27 21:26:16,425 DeMo.train INFO: CMC curve, Rank-5  :92.1%
2025-05-27 21:26:16,425 DeMo.train INFO: CMC curve, Rank-10 :92.6%
2025-05-27 21:26:16,426 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:26:23,276 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:26:23,277 DeMo.train INFO: Best mAP: 77.8%
2025-05-27 21:26:23,277 DeMo.train INFO: Best Rank-1: 91.4%
2025-05-27 21:26:23,277 DeMo.train INFO: Best Rank-5: 92.1%
2025-05-27 21:26:23,277 DeMo.train INFO: Best Rank-10: 92.6%
2025-05-27 21:26:23,277 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:26:34,196 DeMo.train INFO: Epoch[7] Iteration[10/129] Loss: 1.303, Acc: 0.908, Base Lr: 3.05e-04
2025-05-27 21:26:41,184 DeMo.train INFO: Epoch[7] Iteration[20/129] Loss: 1.301, Acc: 0.936, Base Lr: 3.05e-04
2025-05-27 21:26:48,181 DeMo.train INFO: Epoch[7] Iteration[30/129] Loss: 1.304, Acc: 0.936, Base Lr: 3.05e-04
2025-05-27 21:26:55,183 DeMo.train INFO: Epoch[7] Iteration[40/129] Loss: 1.295, Acc: 0.934, Base Lr: 3.05e-04
2025-05-27 21:27:02,171 DeMo.train INFO: Epoch[7] Iteration[50/129] Loss: 1.286, Acc: 0.942, Base Lr: 3.05e-04
2025-05-27 21:27:09,161 DeMo.train INFO: Epoch[7] Iteration[60/129] Loss: 1.270, Acc: 0.950, Base Lr: 3.05e-04
2025-05-27 21:27:16,151 DeMo.train INFO: Epoch[7] Iteration[70/129] Loss: 1.263, Acc: 0.956, Base Lr: 3.05e-04
2025-05-27 21:27:23,169 DeMo.train INFO: Epoch[7] Iteration[80/129] Loss: 1.256, Acc: 0.961, Base Lr: 3.05e-04
2025-05-27 21:27:30,190 DeMo.train INFO: Epoch[7] Iteration[90/129] Loss: 1.248, Acc: 0.964, Base Lr: 3.05e-04
2025-05-27 21:27:37,188 DeMo.train INFO: Epoch[7] Iteration[100/129] Loss: 1.242, Acc: 0.966, Base Lr: 3.05e-04
2025-05-27 21:27:44,160 DeMo.train INFO: Epoch[7] Iteration[110/129] Loss: 1.236, Acc: 0.968, Base Lr: 3.05e-04
2025-05-27 21:27:51,164 DeMo.train INFO: Epoch[7] Iteration[120/129] Loss: 1.231, Acc: 0.970, Base Lr: 3.05e-04
2025-05-27 21:27:56,180 DeMo.train INFO: Epoch 7 done. Time per batch: 0.732[s] Speed: 87.5[samples/s]
2025-05-27 21:27:56,190 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:27:56,190 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 21:27:56,190 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7685
CMC curve: Rank-1: 0.9050, Rank-5: 0.9207, Rank-10: 0.9341
=> Enter reranking
=> Results after reranking:
mAP: 0.7737
CMC curve: Rank-1: 0.9242, Rank-5: 0.9329, Rank-10: 0.9359
=> Improvement:
mAP improvement: 0.0051 (+0.67%)
Rank-1 improvement: 0.0192 (+2.13%)
2025-05-27 21:31:09,798 DeMo.train INFO: Validation Results - Epoch: 7
2025-05-27 21:31:09,798 DeMo.train INFO: mAP: 77.4%
2025-05-27 21:31:09,798 DeMo.train INFO: CMC curve, Rank-1  :92.4%
2025-05-27 21:31:09,798 DeMo.train INFO: CMC curve, Rank-5  :93.3%
2025-05-27 21:31:09,798 DeMo.train INFO: CMC curve, Rank-10 :93.6%
2025-05-27 21:31:09,799 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:31:10,601 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:31:10,601 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 21:31:10,601 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7619
CMC curve: Rank-1: 0.8985, Rank-5: 0.9213, Rank-10: 0.9324
=> Enter reranking
=> Results after reranking:
mAP: 0.7650
CMC curve: Rank-1: 0.9114, Rank-5: 0.9213, Rank-10: 0.9248
=> Improvement:
mAP improvement: 0.0031 (+0.41%)
Rank-1 improvement: 0.0128 (+1.43%)
2025-05-27 21:34:22,329 DeMo.train INFO: Validation Results - Epoch: 7
2025-05-27 21:34:22,329 DeMo.train INFO: mAP: 76.5%
2025-05-27 21:34:22,329 DeMo.train INFO: CMC curve, Rank-1  :91.1%
2025-05-27 21:34:22,329 DeMo.train INFO: CMC curve, Rank-5  :92.1%
2025-05-27 21:34:22,330 DeMo.train INFO: CMC curve, Rank-10 :92.5%
2025-05-27 21:34:22,330 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:34:22,722 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:34:22,722 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 21:34:22,722 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7758
CMC curve: Rank-1: 0.9090, Rank-5: 0.9265, Rank-10: 0.9394
=> Enter reranking
=> Results after reranking:
mAP: 0.7791
CMC curve: Rank-1: 0.9178, Rank-5: 0.9306, Rank-10: 0.9353
=> Improvement:
mAP improvement: 0.0033 (+0.42%)
Rank-1 improvement: 0.0087 (+0.96%)
2025-05-27 21:37:22,519 DeMo.train INFO: Validation Results - Epoch: 7
2025-05-27 21:37:22,519 DeMo.train INFO: mAP: 77.9%
2025-05-27 21:37:22,519 DeMo.train INFO: CMC curve, Rank-1  :91.8%
2025-05-27 21:37:22,519 DeMo.train INFO: CMC curve, Rank-5  :93.1%
2025-05-27 21:37:22,520 DeMo.train INFO: CMC curve, Rank-10 :93.5%
2025-05-27 21:37:22,520 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:37:29,544 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:37:29,545 DeMo.train INFO: Best mAP: 77.9%
2025-05-27 21:37:29,545 DeMo.train INFO: Best Rank-1: 91.8%
2025-05-27 21:37:29,545 DeMo.train INFO: Best Rank-5: 93.1%
2025-05-27 21:37:29,545 DeMo.train INFO: Best Rank-10: 93.5%
2025-05-27 21:37:29,545 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:37:40,741 DeMo.train INFO: Epoch[8] Iteration[10/129] Loss: 1.158, Acc: 0.989, Base Lr: 2.92e-04
2025-05-27 21:37:47,722 DeMo.train INFO: Epoch[8] Iteration[20/129] Loss: 1.180, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:37:54,688 DeMo.train INFO: Epoch[8] Iteration[30/129] Loss: 1.181, Acc: 0.990, Base Lr: 2.92e-04
2025-05-27 21:38:01,673 DeMo.train INFO: Epoch[8] Iteration[40/129] Loss: 1.178, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:38:08,706 DeMo.train INFO: Epoch[8] Iteration[50/129] Loss: 1.179, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:38:15,704 DeMo.train INFO: Epoch[8] Iteration[60/129] Loss: 1.175, Acc: 0.990, Base Lr: 2.92e-04
2025-05-27 21:38:22,686 DeMo.train INFO: Epoch[8] Iteration[70/129] Loss: 1.171, Acc: 0.990, Base Lr: 2.92e-04
2025-05-27 21:38:29,693 DeMo.train INFO: Epoch[8] Iteration[80/129] Loss: 1.172, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:38:36,680 DeMo.train INFO: Epoch[8] Iteration[90/129] Loss: 1.168, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:38:43,676 DeMo.train INFO: Epoch[8] Iteration[100/129] Loss: 1.165, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:38:50,676 DeMo.train INFO: Epoch[8] Iteration[110/129] Loss: 1.162, Acc: 0.992, Base Lr: 2.92e-04
2025-05-27 21:38:57,676 DeMo.train INFO: Epoch[8] Iteration[120/129] Loss: 1.158, Acc: 0.991, Base Lr: 2.92e-04
2025-05-27 21:39:02,712 DeMo.train INFO: Epoch 8 done. Time per batch: 0.734[s] Speed: 87.2[samples/s]
2025-05-27 21:39:02,720 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:39:02,720 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 21:39:02,720 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7683
CMC curve: Rank-1: 0.9108, Rank-5: 0.9254, Rank-10: 0.9347
=> Enter reranking
=> Results after reranking:
mAP: 0.7736
CMC curve: Rank-1: 0.9236, Rank-5: 0.9294, Rank-10: 0.9353
=> Improvement:
mAP improvement: 0.0054 (+0.70%)
Rank-1 improvement: 0.0128 (+1.41%)
2025-05-27 21:42:00,625 DeMo.train INFO: Validation Results - Epoch: 8
2025-05-27 21:42:00,625 DeMo.train INFO: mAP: 77.4%
2025-05-27 21:42:00,625 DeMo.train INFO: CMC curve, Rank-1  :92.4%
2025-05-27 21:42:00,626 DeMo.train INFO: CMC curve, Rank-5  :92.9%
2025-05-27 21:42:00,626 DeMo.train INFO: CMC curve, Rank-10 :93.5%
2025-05-27 21:42:00,626 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:42:01,152 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:42:01,153 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 21:42:01,153 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7661
CMC curve: Rank-1: 0.8950, Rank-5: 0.9125, Rank-10: 0.9277
=> Enter reranking
=> Results after reranking:
mAP: 0.7706
CMC curve: Rank-1: 0.9079, Rank-5: 0.9108, Rank-10: 0.9166
=> Improvement:
mAP improvement: 0.0045 (+0.59%)
Rank-1 improvement: 0.0128 (+1.43%)
2025-05-27 21:45:00,206 DeMo.train INFO: Validation Results - Epoch: 8
2025-05-27 21:45:00,206 DeMo.train INFO: mAP: 77.1%
2025-05-27 21:45:00,206 DeMo.train INFO: CMC curve, Rank-1  :90.8%
2025-05-27 21:45:00,206 DeMo.train INFO: CMC curve, Rank-5  :91.1%
2025-05-27 21:45:00,207 DeMo.train INFO: CMC curve, Rank-10 :91.7%
2025-05-27 21:45:00,207 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:45:00,790 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:45:00,791 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 21:45:00,791 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7750
CMC curve: Rank-1: 0.9131, Rank-5: 0.9283, Rank-10: 0.9382
=> Enter reranking
=> Results after reranking:
mAP: 0.7793
CMC curve: Rank-1: 0.9283, Rank-5: 0.9335, Rank-10: 0.9370
=> Improvement:
mAP improvement: 0.0043 (+0.56%)
Rank-1 improvement: 0.0152 (+1.66%)
2025-05-27 21:48:04,746 DeMo.train INFO: Validation Results - Epoch: 8
2025-05-27 21:48:04,747 DeMo.train INFO: mAP: 77.9%
2025-05-27 21:48:04,747 DeMo.train INFO: CMC curve, Rank-1  :92.8%
2025-05-27 21:48:04,747 DeMo.train INFO: CMC curve, Rank-5  :93.4%
2025-05-27 21:48:04,747 DeMo.train INFO: CMC curve, Rank-10 :93.7%
2025-05-27 21:48:04,747 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:48:11,546 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:48:11,546 DeMo.train INFO: Best mAP: 77.9%
2025-05-27 21:48:11,546 DeMo.train INFO: Best Rank-1: 92.8%
2025-05-27 21:48:11,546 DeMo.train INFO: Best Rank-5: 93.4%
2025-05-27 21:48:11,546 DeMo.train INFO: Best Rank-10: 93.7%
2025-05-27 21:48:11,546 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:48:22,810 DeMo.train INFO: Epoch[9] Iteration[10/129] Loss: 1.127, Acc: 0.991, Base Lr: 2.78e-04
2025-05-27 21:48:29,795 DeMo.train INFO: Epoch[9] Iteration[20/129] Loss: 1.142, Acc: 0.991, Base Lr: 2.78e-04
2025-05-27 21:48:36,791 DeMo.train INFO: Epoch[9] Iteration[30/129] Loss: 1.144, Acc: 0.985, Base Lr: 2.78e-04
2025-05-27 21:48:43,793 DeMo.train INFO: Epoch[9] Iteration[40/129] Loss: 1.146, Acc: 0.986, Base Lr: 2.78e-04
2025-05-27 21:48:50,773 DeMo.train INFO: Epoch[9] Iteration[50/129] Loss: 1.146, Acc: 0.987, Base Lr: 2.78e-04
2025-05-27 21:48:57,759 DeMo.train INFO: Epoch[9] Iteration[60/129] Loss: 1.138, Acc: 0.990, Base Lr: 2.78e-04
2025-05-27 21:49:04,739 DeMo.train INFO: Epoch[9] Iteration[70/129] Loss: 1.137, Acc: 0.990, Base Lr: 2.78e-04
2025-05-27 21:49:11,740 DeMo.train INFO: Epoch[9] Iteration[80/129] Loss: 1.132, Acc: 0.991, Base Lr: 2.78e-04
2025-05-27 21:49:18,751 DeMo.train INFO: Epoch[9] Iteration[90/129] Loss: 1.129, Acc: 0.992, Base Lr: 2.78e-04
2025-05-27 21:49:25,703 DeMo.train INFO: Epoch[9] Iteration[100/129] Loss: 1.127, Acc: 0.993, Base Lr: 2.78e-04
2025-05-27 21:49:32,673 DeMo.train INFO: Epoch[9] Iteration[110/129] Loss: 1.125, Acc: 0.993, Base Lr: 2.78e-04
2025-05-27 21:49:39,639 DeMo.train INFO: Epoch[9] Iteration[120/129] Loss: 1.120, Acc: 0.994, Base Lr: 2.78e-04
2025-05-27 21:49:45,335 DeMo.train INFO: Epoch 9 done. Time per batch: 0.733[s] Speed: 87.3[samples/s]
2025-05-27 21:49:45,348 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:49:45,348 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 21:49:45,348 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7772
CMC curve: Rank-1: 0.9108, Rank-5: 0.9283, Rank-10: 0.9364
=> Enter reranking
=> Results after reranking:
mAP: 0.7827
CMC curve: Rank-1: 0.9277, Rank-5: 0.9324, Rank-10: 0.9370
=> Improvement:
mAP improvement: 0.0055 (+0.70%)
Rank-1 improvement: 0.0169 (+1.86%)
2025-05-27 21:52:47,472 DeMo.train INFO: Validation Results - Epoch: 9
2025-05-27 21:52:47,472 DeMo.train INFO: mAP: 78.3%
2025-05-27 21:52:47,473 DeMo.train INFO: CMC curve, Rank-1  :92.8%
2025-05-27 21:52:47,473 DeMo.train INFO: CMC curve, Rank-5  :93.2%
2025-05-27 21:52:47,473 DeMo.train INFO: CMC curve, Rank-10 :93.7%
2025-05-27 21:52:47,473 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:52:47,616 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:52:47,616 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 21:52:47,616 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7648
CMC curve: Rank-1: 0.8921, Rank-5: 0.9108, Rank-10: 0.9254
=> Enter reranking
=> Results after reranking:
mAP: 0.7689
CMC curve: Rank-1: 0.9149, Rank-5: 0.9190, Rank-10: 0.9230
=> Improvement:
mAP improvement: 0.0041 (+0.53%)
Rank-1 improvement: 0.0227 (+2.55%)
2025-05-27 21:55:46,170 DeMo.train INFO: Validation Results - Epoch: 9
2025-05-27 21:55:46,170 DeMo.train INFO: mAP: 76.9%
2025-05-27 21:55:46,170 DeMo.train INFO: CMC curve, Rank-1  :91.5%
2025-05-27 21:55:46,170 DeMo.train INFO: CMC curve, Rank-5  :91.9%
2025-05-27 21:55:46,170 DeMo.train INFO: CMC curve, Rank-10 :92.3%
2025-05-27 21:55:46,171 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:55:46,186 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:55:46,186 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 21:55:46,187 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7833
CMC curve: Rank-1: 0.9178, Rank-5: 0.9335, Rank-10: 0.9423
=> Enter reranking
=> Results after reranking:
mAP: 0.7873
CMC curve: Rank-1: 0.9353, Rank-5: 0.9417, Rank-10: 0.9434
=> Improvement:
mAP improvement: 0.0040 (+0.51%)
Rank-1 improvement: 0.0175 (+1.91%)
2025-05-27 21:58:46,072 DeMo.train INFO: Validation Results - Epoch: 9
2025-05-27 21:58:46,072 DeMo.train INFO: mAP: 78.7%
2025-05-27 21:58:46,072 DeMo.train INFO: CMC curve, Rank-1  :93.5%
2025-05-27 21:58:46,073 DeMo.train INFO: CMC curve, Rank-5  :94.2%
2025-05-27 21:58:46,073 DeMo.train INFO: CMC curve, Rank-10 :94.3%
2025-05-27 21:58:46,073 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:58:53,703 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:58:53,704 DeMo.train INFO: Best mAP: 78.7%
2025-05-27 21:58:53,704 DeMo.train INFO: Best Rank-1: 93.5%
2025-05-27 21:58:53,704 DeMo.train INFO: Best Rank-5: 94.2%
2025-05-27 21:58:53,704 DeMo.train INFO: Best Rank-10: 94.3%
2025-05-27 21:58:53,704 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 21:59:04,590 DeMo.train INFO: Epoch[10] Iteration[10/129] Loss: 1.113, Acc: 0.997, Base Lr: 2.63e-04
2025-05-27 21:59:11,751 DeMo.train INFO: Epoch[10] Iteration[20/129] Loss: 1.108, Acc: 0.997, Base Lr: 2.63e-04
2025-05-27 21:59:18,719 DeMo.train INFO: Epoch[10] Iteration[30/129] Loss: 1.102, Acc: 0.997, Base Lr: 2.63e-04
2025-05-27 21:59:25,695 DeMo.train INFO: Epoch[10] Iteration[40/129] Loss: 1.099, Acc: 0.997, Base Lr: 2.63e-04
2025-05-27 21:59:32,701 DeMo.train INFO: Epoch[10] Iteration[50/129] Loss: 1.096, Acc: 0.997, Base Lr: 2.63e-04
2025-05-27 21:59:39,799 DeMo.train INFO: Epoch[10] Iteration[60/129] Loss: 1.092, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 21:59:46,774 DeMo.train INFO: Epoch[10] Iteration[70/129] Loss: 1.091, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 21:59:53,766 DeMo.train INFO: Epoch[10] Iteration[80/129] Loss: 1.089, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 22:00:00,762 DeMo.train INFO: Epoch[10] Iteration[90/129] Loss: 1.088, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 22:00:07,758 DeMo.train INFO: Epoch[10] Iteration[100/129] Loss: 1.088, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 22:00:14,772 DeMo.train INFO: Epoch[10] Iteration[110/129] Loss: 1.087, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 22:00:21,761 DeMo.train INFO: Epoch[10] Iteration[120/129] Loss: 1.086, Acc: 0.998, Base Lr: 2.63e-04
2025-05-27 22:00:26,752 DeMo.train INFO: Epoch 10 done. Time per batch: 0.733[s] Speed: 87.4[samples/s]
2025-05-27 22:00:26,756 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 22:00:26,756 DeMo.train INFO: Current is the ori feature testing!
2025-05-27 22:00:26,756 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7737
CMC curve: Rank-1: 0.9108, Rank-5: 0.9254, Rank-10: 0.9376
=> Enter reranking
=> Results after reranking:
mAP: 0.7797
CMC curve: Rank-1: 0.9283, Rank-5: 0.9335, Rank-10: 0.9388
=> Improvement:
mAP improvement: 0.0060 (+0.77%)
Rank-1 improvement: 0.0175 (+1.92%)
2025-05-27 22:03:28,294 DeMo.train INFO: Validation Results - Epoch: 10
2025-05-27 22:03:28,295 DeMo.train INFO: mAP: 78.0%
2025-05-27 22:03:28,295 DeMo.train INFO: CMC curve, Rank-1  :92.8%
2025-05-27 22:03:28,295 DeMo.train INFO: CMC curve, Rank-5  :93.4%
2025-05-27 22:03:28,295 DeMo.train INFO: CMC curve, Rank-10 :93.9%
2025-05-27 22:03:28,295 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 22:03:28,432 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 22:03:28,433 DeMo.train INFO: Current is the moe feature testing!
2025-05-27 22:03:28,433 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.7702
CMC curve: Rank-1: 0.8945, Rank-5: 0.9143, Rank-10: 0.9289
=> Enter reranking
=> Results after reranking:
mAP: 0.7742
CMC curve: Rank-1: 0.9114, Rank-5: 0.9143, Rank-10: 0.9178
=> Improvement:
mAP improvement: 0.0039 (+0.51%)
Rank-1 improvement: 0.0169 (+1.89%)
2025-05-27 22:06:25,841 DeMo.train INFO: Validation Results - Epoch: 10
2025-05-27 22:06:25,841 DeMo.train INFO: mAP: 77.4%
2025-05-27 22:06:25,842 DeMo.train INFO: CMC curve, Rank-1  :91.1%
2025-05-27 22:06:25,842 DeMo.train INFO: CMC curve, Rank-5  :91.4%
2025-05-27 22:06:25,842 DeMo.train INFO: CMC curve, Rank-10 :91.8%
2025-05-27 22:06:25,842 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 22:06:26,162 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-05-27 22:06:26,163 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-05-27 22:06:26,163 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
