2025-06-03 00:39:17,206 DeMo INFO: Saving model in the path :./MSVR310-DeMo/aboqnewdeform_ablation_no_HQ_FULL_20250603_003913
2025-06-03 00:39:17,206 DeMo INFO: Namespace(config_file='configs/MSVR310/DeMo.yml', fea_cft=0, local_rank=0, opts=['OUTPUT_DIR', './MSVR310-DeMo/aboqnewdeform_ablation_no_HQ_FULL_20250603_003913'])
2025-06-03 00:39:17,206 DeMo INFO: Loaded configuration file configs/MSVR310/DeMo.yml
2025-06-03 00:39:17,206 DeMo INFO: 
MODEL:
  TRANSFORMER_TYPE: 'ViT-B-16'
  STRIDE_SIZE: [ 16, 16 ]
  SIE_CAMERA: True
  DIRECT: 0
  SIE_COE: 1.0
  ID_LOSS_WEIGHT: 0.25
  TRIPLET_LOSS_WEIGHT: 1.0
  GLOBAL_LOCAL: True
  HDM: True
  ATM: False
  HEAD: 8
  FROZEN: False
  CENGJIFUSION: False
  NEWDEFORM: True
#  DIVERSITY_WEIGHT: 0

INPUT:
  SIZE_TRAIN: [ 128, 256 ]
  SIZE_TEST: [ 128, 256 ]
  PROB: 0.5 # random horizontal flip
  RE_PROB: 0.5 # random erasing
  PADDING: 10

DATALOADER:
  SAMPLER: 'softmax_triplet'
  NUM_INSTANCE: 4
  NUM_WORKERS: 14

DATASETS:
  NAMES: ('MSVR310')
  ROOT_DIR: '..'

SOLVER:
  BASE_LR: 0.00035
  WARMUP_ITERS: 10
  MAX_EPOCHS: 50
  OPTIMIZER_NAME: 'Adam'
  GAMMA: 0.1
  IMS_PER_BATCH: 64
  EVAL_PERIOD: 1

TEST:
  IMS_PER_BATCH: 64
  RE_RANKING: 'yes'
  WEIGHT: ''
  NECK_FEAT: 'before'
  FEAT_NORM: 'yes'
  MISS: "nothing"

OUTPUT_DIR: '..'


2025-06-03 00:39:17,207 DeMo INFO: Running with config:
DATALOADER:
  NUM_INSTANCE: 4
  NUM_WORKERS: 14
  SAMPLER: softmax_triplet
DATASETS:
  NAMES: MSVR310
  ROOT_DIR: ..
INPUT:
  PADDING: 10
  PIXEL_MEAN: [0.5, 0.5, 0.5]
  PIXEL_STD: [0.5, 0.5, 0.5]
  PROB: 0.5
  RE_PROB: 0.5
  SIZE_TEST: [128, 256]
  SIZE_TRAIN: [128, 256]
MODEL:
  ADAPTER: False
  ATM: False
  ATT_DROP_RATE: 0.0
  CENGJIFUSION: False
  DEVICE: cuda
  DEVICE_ID: 0
  DIRECT: 0
  DIST_TRAIN: False
  DROP_OUT: 0.0
  DROP_PATH: 0.1
  FROZEN: False
  GLOBAL_LOCAL: True
  HDM: True
  HEAD: 8
  ID_LOSS_TYPE: softmax
  ID_LOSS_WEIGHT: 0.25
  IF_LABELSMOOTH: on
  IF_WITH_CENTER: no
  METRIC_LOSS_TYPE: triplet
  NAME: DeMo
  NECK: bnneck
  NEWDEFORM: True
  NO_MARGIN: True
  PRETRAIN_PATH_T: /path/to/your/vitb_16_224_21k.pth
  PROMPT: False
  SIE_CAMERA: True
  SIE_COE: 1.0
  SIE_VIEW: False
  STRIDE_SIZE: [16, 16]
  TRANSFORMER_TYPE: ViT-B-16
  TRIPLET_LOSS_WEIGHT: 1.0
OUTPUT_DIR: ./MSVR310-DeMo/aboqnewdeform_ablation_no_HQ_FULL_20250603_003913
SOLVER:
  BASE_LR: 0.00035
  BIAS_LR_FACTOR: 2
  CENTER_LOSS_WEIGHT: 0.0005
  CENTER_LR: 0.5
  CHECKPOINT_PERIOD: 60
  CLUSTER_MARGIN: 0.3
  COSINE_MARGIN: 0.5
  COSINE_SCALE: 30
  EVAL_PERIOD: 1
  GAMMA: 0.1
  IMS_PER_BATCH: 64
  LARGE_FC_LR: False
  LOG_PERIOD: 10
  MARGIN: 0.3
  MAX_EPOCHS: 50
  MOMENTUM: 0.9
  OPTIMIZER_NAME: Adam
  RANGE_ALPHA: 0
  RANGE_BETA: 1
  RANGE_K: 2
  RANGE_LOSS_WEIGHT: 1
  RANGE_MARGIN: 0.3
  SEED: 1111
  STEPS: (40, 70)
  WARMUP_FACTOR: 0.01
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: 0.0001
TEST:
  FEAT: 0
  FEAT_NORM: yes
  IMS_PER_BATCH: 64
  MISS: nothing
  NECK_FEAT: before
  RE_RANKING: yes
  WEIGHT: 
=> RGB_IR loaded
Dataset statistics:
  ----------------------------------------
  subset   | # ids | # images | # cameras
  ----------------------------------------
  train    |   155 |     1032 |         8
  query    |    52 |      591 |         8
  gallery  |   155 |     1055 |         8
  ----------------------------------------
data is ready
cengjifusion: False mxa
rwkvbackbone: False mxa
using Transformer_type: ViT-B-16 as a backbone
Resized position embedding: %s to %s torch.Size([197, 768]) torch.Size([129, 768])
Position embedding resize to height:8 width: 16
Successfully load ckpt!
<All keys matched successfully>
Loading pretrained model from CLIP
camera number is : 8
combineway: adaptiveboqdeformablation mxa
2025-06-03 00:39:23,232 DeMo INFO: combineway: adaptiveboqdeformablation
newdeform: True mxa
UsingDiversity: False mxa
[HAQN Ablation] Using configuration: QP_MS_AF
[HAQN Ablation] ✗ Hierarchical queries disabled: [64, 64, 64, 64]
[HAQN Ablation] ✗ Layer 0: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 0: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 1: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 1: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 2: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 2: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 3: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 3: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✓ Adaptive fusion enabled
[HAQN Ablation] Using configuration: QP_MS_AF
[HAQN Ablation] ✗ Hierarchical queries disabled: [76, 76, 76, 76]
[HAQN Ablation] ✗ Layer 0: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 0: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 1: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 1: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 2: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 2: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 3: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 3: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✓ Adaptive fusion enabled
[HAQN Ablation] Using configuration: QP_MS_AF
[HAQN Ablation] ✗ Hierarchical queries disabled: [96, 96, 96, 96]
[HAQN Ablation] ✗ Layer 0: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 0: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 1: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 1: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 2: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 2: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✗ Layer 3: Hierarchical queries disabled, using fixed scale 1.000
[HAQN Ablation] ✓ Layer 3: Query propagation enabled (no adapter needed)
[HAQN Ablation] ✓ Adaptive fusion enabled
[HAQN Ablation] ✓ Modality-specific architectures enabled
[EDA Ablation] Using configuration: AMW_MSOF_LTS_ROC
[EDA Ablation] ✓ AMW (Adaptive Modal Weighting) enabled
[EDA Ablation] ✓ MSOF (Multi-Scale Offset Fusion) enabled
[EDA Ablation] ✓ LTS (Learnable Temperature Scaling) enabled
[EDA Ablation] ✓ ROC (Residual Offset Connection) enabled
===========Building DeMo===========
2025-06-03 00:39:23,730 DeMo INFO: DeMo(
  (BACKBONE): build_transformer(
    (base): VisionTransformer(
      (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
      (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (transformer): Transformer(
        (resblocks): Sequential(
          (0): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): ResidualAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (pool): AdaptiveAvgPool1d(output_size=1)
  (rgb_reduce): Sequential(
    (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=1024, out_features=512, bias=True)
    (2): QuickGELU()
  )
  (nir_reduce): Sequential(
    (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=1024, out_features=512, bias=True)
    (2): QuickGELU()
  )
  (tir_reduce): Sequential(
    (0): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
    (1): Linear(in_features=1024, out_features=512, bias=True)
    (2): QuickGELU()
  )
  (generalFusion): GeneralFusion(
    (modalityboqablation): ModalitySpecificBoQAblation(
      (single_modal_boq): AdaptiveBoQAblation(
        (norm_input): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (pos_encoding): PositionalEncodingAblation()
        (boqs): ModuleList(
          (0): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (1): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (2): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (3): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (adaptive_fusion): AdaptiveFusionAblation(
          (attention_net): Sequential(
            (0): Linear(in_features=512, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=1, bias=True)
          )
          (final_proj): Linear(in_features=256, out_features=1, bias=True)
        )
      )
      (dual_modal_boq): AdaptiveBoQAblation(
        (norm_input): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (pos_encoding): PositionalEncodingAblation()
        (boqs): ModuleList(
          (0): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (1): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (2): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (3): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (adaptive_fusion): AdaptiveFusionAblation(
          (attention_net): Sequential(
            (0): Linear(in_features=512, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=1, bias=True)
          )
          (final_proj): Linear(in_features=304, out_features=1, bias=True)
        )
      )
      (triple_modal_boq): AdaptiveBoQAblation(
        (norm_input): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        (pos_encoding): PositionalEncodingAblation()
        (boqs): ModuleList(
          (0): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (1): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (2): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (3): ImprovedBoQBlockAblation(
            (encoder): TransformerEncoderLayer(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (linear1): Linear(in_features=512, out_features=2048, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=2048, out_features=512, bias=True)
              (norm1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
              (dropout1): Dropout(p=0.0, inplace=False)
              (dropout2): Dropout(p=0.0, inplace=False)
            )
            (query_projection): Linear(in_features=512, out_features=512, bias=True)
            (self_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_q): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (cross_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (norm_out): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
        (adaptive_fusion): AdaptiveFusionAblation(
          (attention_net): Sequential(
            (0): Linear(in_features=512, out_features=128, bias=True)
            (1): ReLU()
            (2): Linear(in_features=128, out_features=1, bias=True)
          )
          (final_proj): Linear(in_features=384, out_features=1, bias=True)
        )
      )
    )
    (deformselectablation): DAttentionEnhancedAblation(
      (modal_gate): Sequential(
        (0): Conv2d(1536, 128, kernel_size=(1, 1), stride=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(128, 3, kernel_size=(1, 1), stride=(1, 1))
        (3): Sigmoid()
      )
      (conv_offset): Sequential(
        (0): Conv2d(1536, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): GELU(approximate='none')
        (2): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), groups=512)
        (3): GELU(approximate='none')
        (4): Conv2d(512, 2, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv_offset_coarse): Sequential(
        (0): Conv2d(1536, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): GELU(approximate='none')
        (2): Conv2d(512, 512, kernel_size=(6, 6), stride=(2, 2), padding=(1, 1), groups=512)
        (3): GELU(approximate='none')
        (4): Conv2d(512, 2, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv_offset_fine): Sequential(
        (0): Conv2d(1536, 512, kernel_size=(1, 1), stride=(1, 1))
        (1): GELU(approximate='none')
        (2): Conv2d(512, 512, kernel_size=(2, 2), stride=(2, 2), groups=512)
        (3): GELU(approximate='none')
        (4): Conv2d(512, 2, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (proj_q): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      (proj_k): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      (proj_v): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      (proj_out): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      (proj_drop): Dropout(p=0.0, inplace=False)
      (attn_drop): Dropout(p=0.0, inplace=False)
    )
  )
  (classifier_moe): Linear(in_features=3584, out_features=155, bias=False)
  (bottleneck_moe): BatchNorm1d(3584, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier_r): Linear(in_features=512, out_features=155, bias=False)
  (bottleneck_r): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier_n): Linear(in_features=512, out_features=155, bias=False)
  (bottleneck_n): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (classifier_t): Linear(in_features=512, out_features=155, bias=False)
  (bottleneck_t): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
)
2025-06-03 00:39:23,732 DeMo INFO: number of parameters:159.072464
using soft triplet loss for training
label smooth on, numclasses: 155
2025-06-03 00:39:23,800 DeMo.train INFO: start training
diversityweight: 0 mxa
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/timm/models/helpers.py:7: FutureWarning: Importing from timm.models.helpers is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/timm/models/registry.py:4: FutureWarning: Importing from timm.models.registry is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/ma1/work/demorelated/DeMo/modeling/clip/clip.py:23: UserWarning: PyTorch version 1.7.1 or higher is recommended
  warnings.warn("PyTorch version 1.7.1 or higher is recommended")
/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torchvision/transforms/transforms.py:329: UserWarning: Argument 'interpolation' of type int is deprecated since 0.13 and will be removed in 0.15. Please use InterpolationMode enum.
  warnings.warn(
2025-06-03 00:39:51,879 DeMo.train INFO: Epoch[1] Iteration[10/16] Loss: 9.875, Acc: 0.017, Base Lr: 6.65e-05
2025-06-03 00:39:53,702 DeMo.train INFO: Epoch 1 done. Time per batch: 2.090[s] Speed: 30.6[samples/s]
2025-06-03 00:39:53,705 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:39:53,705 DeMo.train INFO: Current is the ori feature testing!
2025-06-03 00:39:53,705 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.1373
CMC curve: Rank-1: 0.3130, Rank-5: 0.5025, Rank-10: 0.5753
=> Enter reranking
=> Results after reranking:
mAP: 0.1706
CMC curve: Rank-1: 0.3063, Rank-5: 0.4653, Rank-10: 0.5127
=> Improvement:
mAP improvement: 0.0333 (+24.22%)
Rank-1 improvement: -0.0068 (-2.16%)
2025-06-03 00:40:20,048 DeMo.train INFO: Validation Results - Epoch: 1
2025-06-03 00:40:20,048 DeMo.train INFO: mAP: 17.1%
2025-06-03 00:40:20,048 DeMo.train INFO: CMC curve, Rank-1  :30.6%
2025-06-03 00:40:20,048 DeMo.train INFO: CMC curve, Rank-5  :46.5%
2025-06-03 00:40:20,048 DeMo.train INFO: CMC curve, Rank-10 :51.3%
2025-06-03 00:40:20,048 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:40:20,560 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:40:20,560 DeMo.train INFO: Current is the moe feature testing!
2025-06-03 00:40:20,560 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/ma1/work/demorelated/DeMo/utils/metrics.py:275: UserWarning: This overload of addmm_ is deprecated:
	addmm_(Number beta, Number alpha, Tensor mat1, Tensor mat2)
Consider using one of the following signatures instead:
	addmm_(Tensor mat1, Tensor mat2, *, Number beta, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1420.)
  distmat_original.addmm_(1, -2, qf, gf.t())
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.1137
CMC curve: Rank-1: 0.3096, Rank-5: 0.5144, Rank-10: 0.6007
=> Enter reranking
=> Results after reranking:
mAP: 0.1172
CMC curve: Rank-1: 0.2843, Rank-5: 0.4518, Rank-10: 0.5296
=> Improvement:
mAP improvement: 0.0036 (+3.14%)
Rank-1 improvement: -0.0254 (-8.20%)
2025-06-03 00:40:55,384 DeMo.train INFO: Validation Results - Epoch: 1
2025-06-03 00:40:55,384 DeMo.train INFO: mAP: 11.7%
2025-06-03 00:40:55,384 DeMo.train INFO: CMC curve, Rank-1  :28.4%
2025-06-03 00:40:55,384 DeMo.train INFO: CMC curve, Rank-5  :45.2%
2025-06-03 00:40:55,384 DeMo.train INFO: CMC curve, Rank-10 :53.0%
2025-06-03 00:40:55,384 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:40:55,533 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:40:55,533 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-06-03 00:40:55,533 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.1375
CMC curve: Rank-1: 0.3130, Rank-5: 0.5025, Rank-10: 0.5770
=> Enter reranking
=> Results after reranking:
mAP: 0.1709
CMC curve: Rank-1: 0.3063, Rank-5: 0.4670, Rank-10: 0.5144
=> Improvement:
mAP improvement: 0.0334 (+24.33%)
Rank-1 improvement: -0.0068 (-2.16%)
2025-06-03 00:41:29,694 DeMo.train INFO: Validation Results - Epoch: 1
2025-06-03 00:41:29,694 DeMo.train INFO: mAP: 17.1%
2025-06-03 00:41:29,694 DeMo.train INFO: CMC curve, Rank-1  :30.6%
2025-06-03 00:41:29,694 DeMo.train INFO: CMC curve, Rank-5  :46.7%
2025-06-03 00:41:29,694 DeMo.train INFO: CMC curve, Rank-10 :51.4%
2025-06-03 00:41:29,694 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:41:35,631 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:41:35,631 DeMo.train INFO: Best mAP: 17.1%
2025-06-03 00:41:35,631 DeMo.train INFO: Best Rank-1: 30.6%
2025-06-03 00:41:35,632 DeMo.train INFO: Best Rank-5: 46.7%
2025-06-03 00:41:35,632 DeMo.train INFO: Best Rank-10: 51.4%
2025-06-03 00:41:35,632 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:41:45,396 DeMo.train INFO: Epoch[2] Iteration[10/16] Loss: 8.008, Acc: 0.083, Base Lr: 9.80e-05
2025-06-03 00:41:49,798 DeMo.train INFO: Epoch 2 done. Time per batch: 1.012[s] Speed: 63.2[samples/s]
2025-06-03 00:41:49,801 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:41:49,801 DeMo.train INFO: Current is the ori feature testing!
2025-06-03 00:41:49,801 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.1564
CMC curve: Rank-1: 0.2555, Rank-5: 0.4992, Rank-10: 0.5804
=> Enter reranking
=> Results after reranking:
mAP: 0.1788
CMC curve: Rank-1: 0.2437, Rank-5: 0.4349, Rank-10: 0.5212
=> Improvement:
mAP improvement: 0.0224 (+14.36%)
Rank-1 improvement: -0.0118 (-4.64%)
2025-06-03 00:42:39,458 DeMo.train INFO: Validation Results - Epoch: 2
2025-06-03 00:42:39,458 DeMo.train INFO: mAP: 17.9%
2025-06-03 00:42:39,458 DeMo.train INFO: CMC curve, Rank-1  :24.4%
2025-06-03 00:42:39,458 DeMo.train INFO: CMC curve, Rank-5  :43.5%
2025-06-03 00:42:39,458 DeMo.train INFO: CMC curve, Rank-10 :52.1%
2025-06-03 00:42:39,458 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:42:39,715 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:42:39,716 DeMo.train INFO: Current is the moe feature testing!
2025-06-03 00:42:39,716 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.1510
CMC curve: Rank-1: 0.2910, Rank-5: 0.5025, Rank-10: 0.6041
=> Enter reranking
=> Results after reranking:
mAP: 0.1600
CMC curve: Rank-1: 0.2335, Rank-5: 0.4518, Rank-10: 0.5415
=> Improvement:
mAP improvement: 0.0090 (+5.93%)
Rank-1 improvement: -0.0575 (-19.77%)
2025-06-03 00:43:24,142 DeMo.train INFO: Validation Results - Epoch: 2
2025-06-03 00:43:24,142 DeMo.train INFO: mAP: 16.0%
2025-06-03 00:43:24,143 DeMo.train INFO: CMC curve, Rank-1  :23.4%
2025-06-03 00:43:24,143 DeMo.train INFO: CMC curve, Rank-5  :45.2%
2025-06-03 00:43:24,143 DeMo.train INFO: CMC curve, Rank-10 :54.1%
2025-06-03 00:43:24,143 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:43:24,690 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:43:24,690 DeMo.train INFO: Current is the [moe,ori] feature testing!
2025-06-03 00:43:24,690 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The test feature is normalized
=> Computing DistMat with euclidean_distance (before reranking)
=> Results before reranking:
mAP: 0.1634
CMC curve: Rank-1: 0.2775, Rank-5: 0.5161, Rank-10: 0.6176
=> Enter reranking
=> Results after reranking:
mAP: 0.1866
CMC curve: Rank-1: 0.2640, Rank-5: 0.4450, Rank-10: 0.5431
=> Improvement:
mAP improvement: 0.0232 (+14.20%)
Rank-1 improvement: -0.0135 (-4.88%)
2025-06-03 00:44:15,610 DeMo.train INFO: Validation Results - Epoch: 2
2025-06-03 00:44:15,610 DeMo.train INFO: mAP: 18.7%
2025-06-03 00:44:15,610 DeMo.train INFO: CMC curve, Rank-1  :26.4%
2025-06-03 00:44:15,610 DeMo.train INFO: CMC curve, Rank-5  :44.5%
2025-06-03 00:44:15,610 DeMo.train INFO: CMC curve, Rank-10 :54.3%
2025-06-03 00:44:15,610 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:44:21,662 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-06-03 00:44:21,663 DeMo.train INFO: Best mAP: 18.7%
2025-06-03 00:44:21,663 DeMo.train INFO: Best Rank-1: 26.4%
2025-06-03 00:44:21,663 DeMo.train INFO: Best Rank-5: 44.5%
2025-06-03 00:44:21,663 DeMo.train INFO: Best Rank-10: 54.3%
2025-06-03 00:44:21,663 DeMo.train INFO: ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Traceback (most recent call last):
  File "train_net.py", line 84, in <module>
    do_train(
  File "/home/ma1/work/demorelated/DeMo/engine/processor.py", line 71, in do_train
    output = model(img, label=target, cam_label=target_cam, view_label=target_view)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ma1/work/demorelated/DeMo/modeling/make_model.py", line 164, in forward
    moe_feat, loss_moe = self.generalFusion(RGB_cash, NI_cash, TI_cash, RGB_global, NI_global, TI_global)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ma1/work/demorelated/DeMo/modeling/moe/AttnMOE.py", line 5673, in forward
    RGB_special, NI_special, TI_special, RN_shared, RT_shared, NT_shared, RNT_shared = self.forward_HDMadaptiveboqDeformAblation(
  File "/home/ma1/work/demorelated/DeMo/modeling/moe/AttnMOE.py", line 5521, in forward_HDMadaptiveboqDeformAblation
    results, attentions = self.modalityboqablation(features_dict)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ma1/work/demorelated/DeMo/modeling/moe/AttnMOE.py", line 3162, in forward
    out, attn = self.triple_modal_boq(feat)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ma1/work/demorelated/DeMo/modeling/moe/AttnMOE.py", line 3080, in forward
    x, out, attn, queries = boq_layer(x, prev_queries)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ma1/work/demorelated/DeMo/modeling/moe/AttnMOE.py", line 2932, in forward
    out = self.norm_out(out)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/modules/normalization.py", line 190, in forward
    return F.layer_norm(
  File "/home/ma1/anaconda3/envs/DeMo/lib/python3.8/site-packages/torch/nn/functional.py", line 2515, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 12.00 MiB (GPU 0; 79.15 GiB total capacity; 19.27 GiB already allocated; 10.25 MiB free; 19.74 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
